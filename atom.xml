<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Japan Microsoft Configuration Manager Support Team Blog</title>
  
  <subtitle>日本マイクロソフト Microsoft Configuration Manager / Windows 365 / WSUS サポート チームのブログです。</subtitle>
  <link href="https://jpmem.github.io/blog/atom.xml" rel="self"/>
  
  <link href="https://jpmem.github.io/blog/"/>
  <updated>2023-07-06T08:40:51.306Z</updated>
  <id>https://jpmem.github.io/blog/</id>
  
  <author>
    <name>Japan Microsoft Configuration Manager Support Team</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>WSUS で Windows 11 クライアントが Windows 10 と表示される事象について</title>
    <link href="https://jpmem.github.io/blog/mecm/20230601_01/"/>
    <id>https://jpmem.github.io/blog/mecm/20230601_01/</id>
    <published>2023-06-29T15:00:00.000Z</published>
    <updated>2023-07-06T08:40:51.306Z</updated>
    
    <content type="html"><![CDATA[<p><strong>2023/06/01 初版公開</strong><br><strong>2023/06/30 更新</strong><br><strong>- [回避策] の内容を修正しました。</strong><br><strong>- バージョン情報の確認方法を [補足] として追記しました。</strong>  </p><p>みなさま、こんにちは。WSUS サポート チームです。</p><p>今回は WSUS で Windows 11 クライアントが Windows 10 と表示される事象についてご紹介します。</p><p>本問題は弊社でも同様の動作になることを確認できておりますが、誠に恐縮ながら現時点で修正可否は未定です。<br>本問題について進展がありましたら、本ブログを更新する予定ですので、ご不便をおかけしますが、何卒ご理解賜りますようお願い申し上げます。</p><h2 id="事象の概要"><a href="#事象の概要" class="headerlink" title="事象の概要"></a>事象の概要</h2><p>WSUS サーバー上でコンピューターの一覧を表示した場合、Windows 11 であってもオペレーティング システムの表示項目は Windows 10 と表示されます。<br><img src="/blog/mecm/20230601_01/2023-06-01-16-32-45.png"></p><p>本事象はクライアント バージョンを判断するための情報が Windows 10 と Windows 11 で共通であるため発生いたしますが、表示上の問題であり更新プログラムの管理動作には影響はございません。<br><img src="/blog/mecm/20230601_01/2023-06-01-16-33-09.png"></p><h2 id="回避策"><a href="#回避策" class="headerlink" title="回避策"></a>回避策</h2><p>現時点で本動作の修正予定はございませんので、恐れ入りますが、クライアントのオペレーティング システムの判別には表示列を追加し、バージョンの情報をご確認ください。<br>なお、現在確認できているバージョンの情報は下記の通りでございますが、今後変更される可能性がございますのでお含みおきいただけますと幸いです。  </p><p>Windows 11 21H2：10.0.22000 から始まるバージョン<br>Windows 11 22H2 以降：923 から始まるバージョン  </p><p><img src="/blog/mecm/20230601_01/2023-06-01-16-33-48.png"></p><h2 id="補足"><a href="#補足" class="headerlink" title="補足"></a>補足</h2><p>バージョンの情報は、%windir%\System32\wuaueng.dll のバージョンが表示されます。<br>上記バージョン以外が表示された場合は、必要に応じてご確認いただけますと幸いです。  </p><p>// Windows 11 22H2 (OS ビルド 22621.1848) の場合<br><img src="/blog/mecm/20230601_01/2023-06-30-14-29-00.png"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;strong&gt;2023/06/01 初版公開&lt;/strong&gt;&lt;br&gt;&lt;strong&gt;2023/06/30 更新&lt;/strong&gt;&lt;br&gt;&lt;strong&gt;- [回避策] の内容を修正しました。&lt;/strong&gt;&lt;br&gt;&lt;strong&gt;- バージョン情報の確認方法を [補足</summary>
      
    
    
    
    
    <category term="WSUS" scheme="https://jpmem.github.io/blog/tags/WSUS/"/>
    
  </entry>
  
  <entry>
    <title>WSUS から Microsoft Defender Antivirus 向けに定義更新プログラムを配布する方法について</title>
    <link href="https://jpmem.github.io/blog/wsus/2023-06-23_01/"/>
    <id>https://jpmem.github.io/blog/wsus/2023-06-23_01/</id>
    <published>2023-06-22T15:00:00.000Z</published>
    <updated>2023-07-06T08:40:51.430Z</updated>
    
    <content type="html"><![CDATA[<p>みなさま、こんにちは。WSUS サポート チームです。今回は、Microsoft Defender Antivirus 向けに定義更新プログラムを配布する方法をご紹介いたします。WSUS で必要な手順についてお伝えいたしますのでお役立ていただけますと幸いです。  </p><p>＜参考情報＞<br><a href="https://docs.microsoft.com/ja-jp/troubleshoot/mem/configmgr/deploy-definition-updates-using-wsus">WSUS を使用して、Windows Defender を実行しているコンピューターに定義の更新を展開する</a><br><a href="https://docs.microsoft.com/ja-jp/mem/configmgr/protect/deploy-use/endpoint-definitions-wsus#synchronize-definition-updates-for-standalone-wsus">スタンドアロン WSUS の定義ファイルの更新を同期する</a>  </p><h1 id="配布手順"><a href="#配布手順" class="headerlink" title="配布手順"></a>配布手順</h1><h2 id="1-WSUS-に-Microsoft-Defender-Antivirus-の定義更新プログラムを同期する"><a href="#1-WSUS-に-Microsoft-Defender-Antivirus-の定義更新プログラムを同期する" class="headerlink" title="1.WSUS に Microsoft Defender Antivirus の定義更新プログラムを同期する"></a>1.WSUS に Microsoft Defender Antivirus の定義更新プログラムを同期する</h2><p>WSUS で Microsoft Defender Antivirus 向けの定義更新プログラムを配布するために必要な設定についてお伝えします。<br>1-1 WSUS コンソール上から[ オプション ]&gt;[ 製品と分類 ]を選択します。<br>1-2 製品タブにて： [ Microsoft Defender Antivirus ] にチェックを入れます。<br>1-3 分類タブにて： [ 定義更新プログラム ] にチェックを入れます。<br><img src="/blog/wsus/2023-06-23_01/2023-06-23_01-1.png">  </p><h2 id="2-自動承認機能を利用して配布する"><a href="#2-自動承認機能を利用して配布する" class="headerlink" title="2.自動承認機能を利用して配布する"></a>2.自動承認機能を利用して配布する</h2><p>WSUS の自動承認機能を利用し、自動承認規則に基づいて同期実行時に更新プログラムのメタデータが WSUS サーバーにダウンロードされたタイミングで自動的承認を行うように設定できます。</p><p>2-1 WSUSコンソール上から [ オプション ] &gt; [ 自動承認 ] を選択します。<br>2-2 [ 新しい規則 ] を選択します。<br>2-3 [ ステップ1．プロパティを選択します ] にて [ 更新が特定の分類に含まれる場合 ] にチェックを入れます。 [ ステップ2．プロパティを変更します (下線付きの値をクリック) ] にて [ 任意の分類] をクリックし、[ 定義更新プログラム ] を選択します。<br>2-4 [ ステップ1．プロパティを選択します ] にて [ 更新プログラムが特定の製品に含まれる場合 ] にチェックを入れます。 [ ステップ2．プロパティを変更します (下線付きの値をクリック) ] にて [ 任意の製品 ] をクリックし、[ Microsoft Defender Antivirus ] を選択します。<br>2-5 [ すべてのコンピューター ] をクリックし、承認対象とするコンピュータグループを選択します。<br>2-6 [ ステップ3．名前を指定します ] にて任意の規則名を入力します。<br>2-7 自動承認規則設定後、同期のタイミングで Microsoft Defender Antivirus の定義更新プログラムが承認されるようになります。<br> <img src="/blog/wsus/2023-06-23_01/2023-06-23_01-2.png">  </p><p>＜参考情報＞<br><a href="https://docs.microsoft.com/ja-jp/security-updates/windowsupdateservices/18111597">更新プログラムの自動承認</a> </p><h1 id="留意いただきたい事項"><a href="#留意いただきたい事項" class="headerlink" title="留意いただきたい事項"></a>留意いただきたい事項</h1><p>特に Microsoft Defender Antivirus 向けの定義更新プログラムは、１日に複数回リリースされます為、自動承認規則により承認される更新プログラムの数が日々増加し、WsusContent フォルダにダウンロードされるファイルが非常に多くなる傾向があります。このことにより、ディスクサイズの容量圧迫につながりやすくなりますため、クリーンアップ ウィザードの 「不要な更新ファイル」 を実行し、定期的にファイルを削除いただくことをお勧めいたします。削除対象となる更新プログラムについては、<a href="https://jpmem.github.io/blog/wsus/2017-12-05_01/">WSUS のクリーンアップ ウィザードについて</a> にてご紹介しておりますのでご参照ください。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;みなさま、こんにちは。WSUS サポート チームです。今回は、Microsoft Defender Antivirus 向けに定義更新プログラムを配布する方法をご紹介いたします。WSUS で必要な手順についてお伝えいたしますのでお役立ていただけますと幸いです。  &lt;/p&gt;
</summary>
      
    
    
    
    
    <category term="WSUS" scheme="https://jpmem.github.io/blog/tags/WSUS/"/>
    
    <category term="使い方" scheme="https://jpmem.github.io/blog/tags/%E4%BD%BF%E3%81%84%E6%96%B9/"/>
    
  </entry>
  
  <entry>
    <title>WSUS から更新プログラムが配信されないときのチェックポイント</title>
    <link href="https://jpmem.github.io/blog/wsus/2023-06-16_01/"/>
    <id>https://jpmem.github.io/blog/wsus/2023-06-16_01/</id>
    <published>2023-06-15T15:00:00.000Z</published>
    <updated>2023-07-06T08:40:51.430Z</updated>
    
    <content type="html"><![CDATA[<p>みなさま、こんにちは。WSUS サポート チームです。</p><p>今回は、WSUS から更新プログラムが配信されない問題が発生したときのチェックポイントをご紹介します。<br>WSUS から更新プログラムが配信される仕組みについては、<a href="https://jpmem.github.io/blog/wsus/2023-05-02_01/">こちらの記事</a>でご紹介しておりますので、こちらも是非ご確認ください。</p><h1 id="設定値のチェック"><a href="#設定値のチェック" class="headerlink" title="設定値のチェック"></a>設定値のチェック</h1><p>WSUS クライアントの接続先となる WSUS サーバーについては、以下のドメイン ポリシー / ローカル ポリシーやレジストリで指定します。  </p><ul><li>ポリシー  </li></ul><p><strong>[コンピューターの構成] - [管理用テンプレート] - [Windows コンポーネント] - [Windows Update] - [イントラネットの Microsoft 更新サービスの場所を指定する]</strong><br>または<br><strong>[コンピューターの構成] - [管理用テンプレート] - [Windows コンポーネント] - [Windows Update] - [Windows Server Update Service から提供される更新プログラムの管理] - [イントラネットの Microsoft 更新サービスの場所を指定する]</strong>  </p><p>これらのポリシーが構成されると、下記レジストリ値がセットされます。</p><ul><li>レジストリ  </li></ul><p><strong>HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\Windows\WindowsUpdate</strong><br><strong>WUServer: &lt;WSUS サーバーの URL&gt;</strong><br><strong>WUStatusServer: &lt;WSUS サーバーの URL&gt;</strong><br><strong>HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\Windows\WindowsUpdate</strong><br><strong>UseWUServer: 1</strong>  </p><p>まずはレジストリ エディター (regedit) より、このレジストリに正しい値がセットされているかを確認しましょう。<br>もし、想定しない WSUS サーバーの URL がセットされている場合は、ドメイン ポリシーまたはローカル ポリシーの設定値を見直して、正しい値をセットしてください。</p><h1 id="クライアントと-WSUS-の疎通チェック"><a href="#クライアントと-WSUS-の疎通チェック" class="headerlink" title="クライアントと WSUS の疎通チェック"></a>クライアントと WSUS の疎通チェック</h1><p>WSUS クライアントが WSUS サーバーから更新プログラムを受信するためには、WSUS サーバーに対して HTTP リクエストが送信できるネットワーク環境である必要があります。<br>WSUS サーバーの接続先となる URL については、上述で説明したレジストリ値に格納されています。<br>URL が IP アドレスではなく FQDN やホスト名になっている場合、名前解決ができるか確認する必要がありますので、まずはターミナルや PowerShell コンソールを開いて以下のコマンドを実行し IP アドレスを取得できるか確認しましょう。</p><p>例) URL が <a href="http://wsus.contoso.com:8530/">http://WSUS.contoso.com:8530</a> の場合</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nslookup WSUS.contoso.com</span><br></pre></td></tr></table></figure><p>出力例  </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Server:  UnKnown</span><br><span class="line">Address:  192.168.1.1</span><br><span class="line"></span><br><span class="line">Name:    WSUS.contoso.com</span><br><span class="line">Address:  192.168.1.10</span><br></pre></td></tr></table></figure><p>ここで IP アドレスが取得できなかった場合、名前解決失敗エラーとなりますので、DNS の設定や FQDN が正しいか見直してください。<br>名前解決ができることを確認した後は、以下の PowerShell コマンドを実行して、この URL に対して、HTTP リクエストが送信できるかどうかを確認しましょう。  </p><p>例) URL が <a href="http://wsus.contoso.com:8530/">http://WSUS.contoso.com:8530</a> の場合</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Invoke-WebRequest -Uri http://WSUS.contoso.com:8530/ClientWebService/Client.asmx?wsdl -UseBasicParsing</span><br><span class="line">Invoke-WebRequest -Uri http://WSUS.contoso.com:8530/SimpleAuthWebService/SimpleAuth.asmx -UseBasicParsing</span><br></pre></td></tr></table></figure><p>アクセス可能な場合は、以下のように StatusCode 200 の出力結果となりますので、このような出力となるかご確認ください。  </p><p>出力例  </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">StatusCode        : 200</span><br><span class="line">StatusDescription : OK</span><br><span class="line">...&lt;省略&gt;</span><br></pre></td></tr></table></figure><h1 id="プロキシ設定を確認する"><a href="#プロキシ設定を確認する" class="headerlink" title="プロキシ設定を確認する"></a>プロキシ設定を確認する</h1><p>もし、更新プログラムの確認時に StausCode が 407 の Proxy Authentication Required エラーなどが返された場合、プロキシを経由して WSUS サーバーにアクセスした結果、認証ができずに失敗していることが疑われます。<br>そのときは、以下のコマンドで WinHTTP のプロキシ設定を確認してください。  </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">netsh winhttp show proxy</span><br></pre></td></tr></table></figure><p>もし、設定されている場合、バイパスリストに WSUS サーバーの FQDN やそのドメインが含まれていなければ、プロキシを経由することになります。<br>その場合は、プロキシ設定が不要であればリセットするか、バイパスリストに WSUS サーバーを追加することをご検討ください。  </p><ul><li><p>リセットするコマンド</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">netsh winhttp reset proxy</span><br></pre></td></tr></table></figure></li><li><p>バイパスリストを追加するコマンド<br>例) URL が <a href="http://wsus.contoso.com:8530/">http://WSUS.contoso.com:8530</a> の場合</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">netsh set proxy proxy-server=&quot;&lt;既存のプロキシ サーバー名&gt;&quot; bypass-list=&quot;&lt;既存のバイパス リスト&gt;;WSUS.contoso.com&quot;</span><br></pre></td></tr></table></figure><p>※ ドメイン名をバイパス リストに追加する場合は、*.contoso.com としてください。</p></li></ul><p>プロキシを経由していないにもかかわらず、StausCode が 503 などのサーバー エラーが返された場合、WSUS サーバー側で問題が発生している可能性があるので、次の確認に進みます。</p><h1 id="WSUS-サーバーの正常性チェック"><a href="#WSUS-サーバーの正常性チェック" class="headerlink" title="WSUS サーバーの正常性チェック"></a>WSUS サーバーの正常性チェック</h1><p>WsusPool の停止などによって、WSUS サーバーが正常に動作していない場合、クライアントからの更新プログラムの確認がエラーとなります。<br>WsusPool の停止が発生している場合、WSUS 管理コンソールが開けない状態となりますので、まず WSUS サーバーにログオンし、WSUS 管理コンソールを起動して、情報が確認できるかどうかご確認ください。  </p><p>WSUS コンソール起動時にエラーが発生して情報が確認できない場合は、<a href="https://jpmem.github.io/blog/wsus/2022-05-23_01/">WSUS コンソールが全く開かなくなってしまった！ WsusPool の停止とは</a> の記事をもとに対処を実施しましょう。</p><h1 id="Windows-Update-クライアントの情報をクリアする"><a href="#Windows-Update-クライアントの情報をクリアする" class="headerlink" title="Windows Update クライアントの情報をクリアする"></a>Windows Update クライアントの情報をクリアする</h1><p>ネットワークやサーバー側に問題がなかった場合、Windows Update クライアントがキャッシュしているファイルの問題の影響で、問題が発生している可能性があります。<br>その場合は、以下の手順で Windows Update クライアントの情報をクリアにした後、事象が解消されるかどうかご確認ください。</p><h2 id="注意事項"><a href="#注意事項" class="headerlink" title="注意事項"></a>注意事項</h2><ul><li>[更新履歴の表示] の情報がクリアされます。(作業履歴の情報ですので 現時点の適用状態や今後の適用動作には全く影響ありません)</li><li>過去クライアント側の操作によって「非表示」設定（処理対象から除外）していた更新プログラムが存在する場合は、その設定が解除されます。</li><li>次回 WSUS にアクセスした際にキャッシュされていた情報を再ダウンロードします。 そのため、同時に多数の端末が実施した場合にはネットワークの負荷が発生する場合があります。</li></ul><h2 id="手順"><a href="#手順" class="headerlink" title="手順"></a>手順</h2><p>以下ステップを順にご実施ください。</p><p><strong>1. Windows Update 関連サービスの停止</strong><br><strong>2. SoftwareDistribution フォルダーのリネーム</strong><br><strong>3. BITS のジョブを削除 (Windows 11 の場合、本手順は不要です。)</strong><br><strong>4. Windows Update 関連サービスの開始</strong><br><strong>5. 更新プログラム検出の確認</strong></p><p>各手順の詳細は以下の通りです。</p><h3 id="1-Windows-Update-関連サービスの停止"><a href="#1-Windows-Update-関連サービスの停止" class="headerlink" title="1. Windows Update 関連サービスの停止"></a><strong>1. Windows Update 関連サービスの停止</strong></h3><p>管理者として実行にて起動したコマンド プロンプト、またはターミナルから以下のコマンドを実行して、サービスを停止します。  </p><ul><li><p>Windows Server 2012 / 2012 R2 の場合</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">net stop wuauserv</span><br><span class="line">net stop bits</span><br></pre></td></tr></table></figure></li><li><p>Windows Server 2016 の場合</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">net stop usosvc</span><br><span class="line">net stop wuauserv</span><br><span class="line">net stop bits</span><br></pre></td></tr></table></figure></li><li><p>Windows 10 / Windows 11 / Windows Server 2019 以降の場合</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">net stop usosvc</span><br><span class="line">net stop wuauserv</span><br><span class="line">net stop bits</span><br><span class="line">net stop dosvc</span><br></pre></td></tr></table></figure></li></ul><h3 id="2-SoftwareDistribution-フォルダーのリネーム"><a href="#2-SoftwareDistribution-フォルダーのリネーム" class="headerlink" title="2. SoftwareDistribution フォルダーのリネーム"></a><strong>2. SoftwareDistribution フォルダーのリネーム</strong></h3><p>以下のコマンドを実行して、更新プログラムが保存されている SoftwareDistribution フォルダーをリネームします。<br>SoftwareDistribution フォルダーは、Windows Update に使用されます。例えば Software Distribution フォルダー配下の Download フォルダーにはダウンロードされた更新プログラムが一時的に保管されます。SoftwareDistribution フォルダーをリネームすることで、これまでダウンロードされた更新プログラムやデータベースの情報がクリアされます。  </p><p>コマンド プロンプトの場合</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ren %systemroot%\SoftwareDistribution SoftwareDistribution.old</span><br></pre></td></tr></table></figure><p>PowerShell コンソール / ターミナルの場合</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Rename-Item &quot;$env:systemroot\SoftwareDistribution&quot; &quot;$env:systemroot\SoftwareDistribution.old&quot;</span><br></pre></td></tr></table></figure><h3 id="3-BITS-のジョブを削除-Windows-11-の場合、本手順は不要です。"><a href="#3-BITS-のジョブを削除-Windows-11-の場合、本手順は不要です。" class="headerlink" title="3. BITS のジョブを削除 (Windows 11 の場合、本手順は不要です。)"></a><strong>3. BITS のジョブを削除 (Windows 11 の場合、本手順は不要です。)</strong></h3><p>以下のコマンドを実行して、ダウンロード中の BITS ジョブを削除します。<br>Windows 10 までの Windows Update は BITS という Windows の機能を利用して、アイドル中のネットワーク回線の帯域幅を使用して、バックグラウンドで更新プログラムをダウンロードします。ダウンロードに失敗した更新プログラムが BITS キューに滞留している場合、以下のコマンドを順番に実行してキューから削除することで、新しくダウンロード ジョブが作成され、ダウンロードに成功する可能性があります。  </p><ul><li>Windows 10 バージョン 1703 以前、Windows Server 2012 / 2012 R2 / 2016 の場合  </li></ul><p>コマンド プロンプトの場合</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">del %ALLUSERSPROFILE%\Microsoft\Network\Downloader\qmgr0.dat</span><br><span class="line">del %ALLUSERSPROFILE%\Microsoft\Network\Downloader\qmgr1.dat</span><br></pre></td></tr></table></figure><p>PowerShell コンソール / ターミナルの場合</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Remove-Item &quot;$env:allusersprofile\Microsoft\Network\Downloader\qmgr0.dat&quot;</span><br><span class="line">Remove-Item &quot;$env:allusersprofile\Microsoft\Network\Downloader\qmgr1.dat&quot;</span><br></pre></td></tr></table></figure><ul><li> Windows 10 バージョン 1703 以降 / Windows Server 2019 以降の場合</li></ul><p>コマンド プロンプトの場合</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">del /Q %ALLUSERSPROFILE%\Microsoft\Network\Downloader\*</span><br></pre></td></tr></table></figure><p>PowerShell コンソール / ターミナルの場合</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Remove-Item &quot;$env:allusersprofile\Microsoft\Network\Downloader\*&quot;</span><br></pre></td></tr></table></figure><h3 id="4-Windows-Update-関連サービスの開始"><a href="#4-Windows-Update-関連サービスの開始" class="headerlink" title="4. Windows Update 関連サービスの開始"></a><strong>4. Windows Update 関連サービスの開始</strong></h3><p>以下のコマンドを実行して、項番 1) で停止したサービスを開始します。最初から停止済みのサービスがあった場合は、開始しなくても構いません。</p><ul><li><p>Windows Server 2012 / 2012 R2 の場合</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">net start wuauserv</span><br><span class="line">net start bits</span><br></pre></td></tr></table></figure></li><li><p>Windows Server 2016 の場合</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">net start usosvc</span><br><span class="line">net start wuauserv</span><br><span class="line">net start bits</span><br></pre></td></tr></table></figure></li><li><p>Windows 10 / Windows 11 / Windows Server 2019 以降の場合</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">net start usosvc</span><br><span class="line">net start wuauserv</span><br><span class="line">net start bits</span><br><span class="line">net start dosvc</span><br></pre></td></tr></table></figure></li></ul><h3 id="5-更新プログラム検出の確認"><a href="#5-更新プログラム検出の確認" class="headerlink" title="5. 更新プログラム検出の確認"></a><strong>5. 更新プログラム検出の確認</strong></h3><p>上記の手順を実施して Windows Update クライアントの情報をクリアした後、以下の手順で更新プログラムの確認を実行します。<br>Windows 10 / Windows Server 2016 以降 / Windows 11 の場合、更新プログラムのチェック実行後、更新プログラムを検出すると、更新プログラムのインストールが開始されることがありますので、予めご留意ください。</p><ul><li>Windows Server 2012 / 2012 R2 の場合<br>[コントロール パネル] - [システムとセキュリティ] - [Windows Update] を開き [更新プログラムの確認] をクリック  </li><li>Windows 10 / Windows Server 2016 以降の場合<br>[設定] - [更新とセキュリティ] - [Windows Update] を開き [更新プログラムのチェック] をクリック</li><li>Windows 11 の場合<br>[設定] - [Windows Update] を開き [更新プログラムのチェック] をクリック  </li></ul><p>コマンドで実行する場合は、以下のコマンドを実行してください。</p><ul><li>Windows Server 2012 / 2012 R2 の場合<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wuauclt /detectnow</span><br></pre></td></tr></table></figure></li><li>Windows 10 / Windows 11 / Windows Server 2016 以降の場合<br>コマンド プロンプトから実行可能なコマンドは用意されておりませんので、以下の PowerShell コマンドを PowerShell コンソールやターミナルより実行してください。<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$AutoUpdates = New-Object -ComObject &quot;Microsoft.Update.AutoUpdate&quot;</span><br><span class="line">$AutoUpdates.DetectNow()</span><br></pre></td></tr></table></figure>※ 上記 PowerShell コマンドによる検出処理の実行につきましては Windows 10 version 1709 以降のバージョンでは下記ポリシーにて設定いただいている検出頻度 (既定では 22 時間) 以内で実行した場合に、ブロックされる処理が組み込まれており、実行されませんので、ご留意ください。</li></ul><p><strong>[コンピューターの構成] - [管理用テンプレート] - [Windows コンポーネント] - [Windows Update] - [自動更新の検出頻度]</strong></p><p>例えば、最後に「更新プログラムのチェック」が実行された時刻が 1 時の場合、このコマンドは既定値ですと 22 時間後である 23 時までの間機能しないということです。本 PowerShell コマンドを実行して、機能した場合、以下のように [Windows Update] 画面に「更新プログラムを確認しています…」が表示されます。</p><p><img src="/blog/wsus/2023-06-16_01/2023-06-16_01_1.png"></p><h1 id="上記のいずれも問題なかった場合"><a href="#上記のいずれも問題なかった場合" class="headerlink" title="上記のいずれも問題なかった場合"></a>上記のいずれも問題なかった場合</h1><p>WSUS サーバーも問題なく動作しており、クライアントとサーバー間の接続も問題なかった場合は、WSUS サーバーのパフォーマンス劣化により、クライアントからのリクエストに対する応答に時間がかかることで、タイムアウト エラーが発生している可能性があります。<br>この場合は、まず対象の WSUS サーバーで <a href="https://jpmem.github.io/blog/wsus/2022-05-09_01/">WSUS メンテナンスガイド新版</a> を実施いただき、WSUS サーバーのメンテナンスを実施しましょう。これによって、パフォーマンスを改善し、応答までの時間短縮を試みます。  </p><p>これでもタイムアウトが発生する場合は、可能な限り WSUS サーバー側で不要な更新プログラムを「拒否済み」に設定する対処方法が効果的です。<br>例えば、Windows Server 2016 など、リリースされてから時間が経過している OS の累積更新プログラムについては、過去の更新プログラムとの置換関係を保持し続けている関係上、カタログ情報（メタデータ）が肥大化しているため、「未承認」や「インストール承認」の更新プログラムが多いと、タイムアウト エラーなどが発生しやすくなります。  </p><p>OS の累積更新プログラムについては、最新の更新プログラムを配信していれば、それによって置き換えられた更新プログラムを配信しても、クライアント側に配信されませんので、特別な要件が無い限り「未承認」や「インストール承認」のままにしておく必要はありません。<br>例えば、2023 年 6 月の Windows Server 2016 累積更新プログラムを「インストール承認」している場合、それによって置き換えられた更新プログラムは「拒否済み」にすることができます。<br>「拒否済み」については、<a href="https://jpmem.github.io/blog/wsus/2017-12-11_01/">不要な更新プログラムは「拒否済み」に設定しよう！</a>にて紹介していますので、実施をご検討ください。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;みなさま、こんにちは。WSUS サポート チームです。&lt;/p&gt;
&lt;p&gt;今回は、WSUS から更新プログラムが配信されない問題が発生したときのチェックポイントをご紹介します。&lt;br&gt;WSUS から更新プログラムが配信される仕組みについては、&lt;a href=&quot;https://j</summary>
      
    
    
    
    
    <category term="WSUS" scheme="https://jpmem.github.io/blog/tags/WSUS/"/>
    
    <category term="チェックポイント" scheme="https://jpmem.github.io/blog/tags/%E3%83%81%E3%82%A7%E3%83%83%E3%82%AF%E3%83%9D%E3%82%A4%E3%83%B3%E3%83%88/"/>
    
  </entry>
  
  <entry>
    <title>オンプレミス環境向け UUP 更新プログラムを提供開始しました</title>
    <link href="https://jpmem.github.io/blog/mecm/20230530_01/"/>
    <id>https://jpmem.github.io/blog/mecm/20230530_01/</id>
    <published>2023-05-29T15:00:00.000Z</published>
    <updated>2023-07-06T08:40:51.302Z</updated>
    
    <content type="html"><![CDATA[<p>みなさん、こんにちは。Configuration Manager サポート チームです。</p><p>今回は、3 月28日に開始されたオンプレミス環境向け UUP についてです。<br>UUP とは Unified Update Platform の略で、効率的に更新プログラムをダウンロード・インストールするためのテクノロジーです。UUP により、従来の更新プログラムより高速かつ軽量になります。</p><p>Microsoft Update から更新プログラムを取得するデバイスについては、既に Windows 10 バージョン 1709 以降から UUP が導入されていましたが、この度オンプレミス サーバーで更新プログラムを管理する Configuration Manager や WSUS に対しても UUP の提供が開始されました。</p><p>まず、UUP 自体の詳しい情報は、こちらを参考にしてください。</p><ul><li>Unified Update Platform (UUP) のご紹介<br><a href="https://blogs.windows.com/japan/2017/01/30/unified-update-platform-uup/">https://blogs.windows.com/japan/2017/01/30/unified-update-platform-uup/</a></li></ul><p>オンプレミス環境向け UUP の対象は、Windows 11, version 22H2 の累積更新プログラム、および Windows 10, version 20H1 から Windows 11, version 22H2 までの機能更新プログラムです。</p><p>適用される環境の前提は、以下の通りです。</p><ul><li>Configuration Manager バージョン 2203 以降</li><li>サポートされているすべてのバージョンの WSUS  </li></ul><h2 id="配布ポイントに約-10-GB-が転送される？"><a href="#配布ポイントに約-10-GB-が転送される？" class="headerlink" title="配布ポイントに約 10 GB が転送される？"></a>配布ポイントに約 10 GB が転送される？</h2><p>さて前述のとおり軽量化の利点がある UUP ですが、オンプレミス環境で初めて UUP 対象の更新プログラムを展開する際は、約 10 GB の更新プログラムをダウンロードし、配布ポイントに転送する必要がある点にご注意ください。最初の 1 回配布ポイントに転送すれば、以降の更新プログラムは前月との差分コンテンツのみ転送対象となります。</p><p>なおクライアントは差分をダウンロードするため大きなサイズがダウンロードされる心配はありませんのでご安心ください。</p><p>UUP を利用するために必要となりますので、ぜひ計画の上、ダウンロードを進めてください。</p><p>(参考画像)<br>コンソールから更新プログラムのプロパティ &gt; コンテンツ情報を開くと、サイズが確認できます。<br><img src="/blog/mecm/20230530_01/1.png" alt="image.png"></p><p>(参考情報)  </p><ul><li><p>オンプレミス環境向け UUP のスケジュールや、利点についてまとめています。<br>What’s UUP? New update style coming next week!<br><a href="https://techcommunity.microsoft.com/t5/windows-it-pro-blog/what-s-uup-new-update-style-coming-next-week/ba-p/3773065">https://techcommunity.microsoft.com/t5/windows-it-pro-blog/what-s-uup-new-update-style-coming-next-week/ba-p/3773065</a></p></li><li><p>オンプレミス環境向け UUP において、1 度だけ約 10 GBのコンテンツ ダウンロードがおこなわれる詳細動作を記載しています。<br>Unified Update Platform with ConfigMgr – Questions from the Field<br><a href="https://techcommunity.microsoft.com/t5/core-infrastructure-and-security/unified-update-platform-with-configmgr-questions-from-the-field/ba-p/3815038">https://techcommunity.microsoft.com/t5/core-infrastructure-and-security/unified-update-platform-with-configmgr-questions-from-the-field/ba-p/3815038</a></p></li></ul><ul><li>オンプレミス環境向け UUP の FAQ がまとめられています。<br>Unified update platform (UUP) FAQ’s<br><a href="https://techcommunity.microsoft.com/t5/configuration-manager-blog/unified-update-platform-uup-faq-s/ba-p/3808697">https://techcommunity.microsoft.com/t5/configuration-manager-blog/unified-update-platform-uup-faq-s/ba-p/3808697</a></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;みなさん、こんにちは。Configuration Manager サポート チームです。&lt;/p&gt;
&lt;p&gt;今回は、3 月28日に開始されたオンプレミス環境向け UUP についてです。&lt;br&gt;UUP とは Unified Update Platform の略で、効率的に更新プロ</summary>
      
    
    
    
    
    <category term="MECM" scheme="https://jpmem.github.io/blog/tags/MECM/"/>
    
  </entry>
  
  <entry>
    <title>Configuration Manager クライアントで Windows Update 配下のポリシーが意図せず未構成になってしまう事象について</title>
    <link href="https://jpmem.github.io/blog/mecm/20230427_01/"/>
    <id>https://jpmem.github.io/blog/mecm/20230427_01/</id>
    <published>2023-05-01T15:00:00.000Z</published>
    <updated>2023-07-06T08:40:51.302Z</updated>
    
    <content type="html"><![CDATA[<p>みなさま、こんにちは。Configuration Manager サポート チームです。  </p><p>本日は、Configuration Manager クライアントで Windows Update 配下のポリシーが未構成になってしまう事象についてご紹介いたします。該当のポリシーのパスは以下です。  </p><p>[コンピューターの構成] - [管理用テンプレート] - [Windows コンポーネント] - [Windows Update]  </p><p>Configuration Manager でソフトウェア更新プログラムの管理を行っている場合、以下のポリシーが “有効” になりますが、これらのポリシーが意図せず “未構成” になってしまうケースがございます。  </p><p>・[イントラネットの Microsoft 更新サービスの場所を指定する]<br>・[Windows Update に対するスキャンを発生させる更新遅延ポリシーを許可しない]<br>・[イントラネットの Microsoft 更新サービスの保存場所にある署名済み更新を許可する]  </p><p>このケースに当てはまった場合、特に [イントラネットの Microsoft 更新サービスの場所を指定する] ポリシーが “未構成” になってしまった場合、ソフトウェア更新ポイント（WSUS）サーバーに対してスキャンされないため、インターネットの Windows Update に対してスキャンを行ってしまいます。<br>その結果、意図しない機能更新プログラムや品質更新プログラムがダウンロード、インストールされてしまうため、更新プログラムの管理が行えなくなります。  </p><p>想定される要因として以下 3 つが挙げられ、それぞれの場合について記載させていただきますので、トラブルシューティングのご参考になれば幸いです。  </p><ol><li>Configuration Manager クライアントをアンインストールした。  </li><li>クライアント設定で [クライアントのソフトウェア更新プログラムを有効にする] の設定を “いいえ” にした。  </li><li>60 日間、管理ポイントと通信を行っていない。  </li></ol><h3 id="1-Configuration-Manager-クライアントをアンインストールした。"><a href="#1-Configuration-Manager-クライアントをアンインストールした。" class="headerlink" title="1. Configuration Manager クライアントをアンインストールした。"></a>1. Configuration Manager クライアントをアンインストールした。</h3><p>クライアントをアンインストールすると、Configuration Manager で管理されなくなるため、上記 3 つのポリシーは “未構成” になります。<br>対処としては Configuration Manager クライアントをインストールすることです。  </p><h3 id="2-クライアント設定で-クライアントのソフトウェア更新プログラムを有効にする-の設定を-“いいえ”-にした。"><a href="#2-クライアント設定で-クライアントのソフトウェア更新プログラムを有効にする-の設定を-“いいえ”-にした。" class="headerlink" title="2. クライアント設定で [クライアントのソフトウェア更新プログラムを有効にする] の設定を “いいえ” にした。"></a>2. クライアント設定で [クライアントのソフトウェア更新プログラムを有効にする] の設定を “いいえ” にした。</h3><p>クライアント設定の [ソフトウェア更新プログラム] にて、[クライアントのソフトウェア更新プログラムを有効にする] の設定を “いいえ” に変更した際、[イントラネットの Microsoft 更新サービスの場所を指定する] のローカル ポリシーが “未構成” になります。  </p><p><img src="/blog/mecm/20230427_01/2023-04-28-08-58-50.png">  </p><p>対処としては上記の [クライアントのソフトウェア更新プログラムを有効にする] の設定を “はい” に設定することです。  </p><h3 id="3-60-日間、管理ポイントと通信を行っていない。"><a href="#3-60-日間、管理ポイントと通信を行っていない。" class="headerlink" title="3. 60 日間、管理ポイントと通信を行っていない。"></a>3. 60 日間、管理ポイントと通信を行っていない。</h3><p>Configuration Manager の管理ポイントから取得するポリシーには有効期限が 60日に設定されており、この有効期限の間に管理ポイントと通信をしなかった場合にポリシーが削除されます。  </p><p>ポリシーが削除されたあと、CcmExec サービスが起動することにより、上述のポリシーが “未構成” になってしまいます。<br>なお、再度クライアントが Configuration Manager の管理ポイントと通信を行うとポリシーの取得を行います。<br>その後、ソフトウェア更新ポイントへのスキャンのタイミングで、管理ポイントにソフトウェア更新ポイントの場所を問い合わせ、上述のポリシーがローカル グループ ポリシーに書き込まれます。  </p><p>上記のため、対処としては管理ポイントと通信させることです。  </p><p>以上、ご参考になりましたら幸いです。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;みなさま、こんにちは。Configuration Manager サポート チームです。  &lt;/p&gt;
&lt;p&gt;本日は、Configuration Manager クライアントで Windows Update 配下のポリシーが未構成になってしまう事象についてご紹介いたします。該</summary>
      
    
    
    
    
    <category term="MECM" scheme="https://jpmem.github.io/blog/tags/MECM/"/>
    
  </entry>
  
  <entry>
    <title>WSUS の仕組み クライアント編</title>
    <link href="https://jpmem.github.io/blog/wsus/2023-05-02_01/"/>
    <id>https://jpmem.github.io/blog/wsus/2023-05-02_01/</id>
    <published>2023-05-01T15:00:00.000Z</published>
    <updated>2023-07-06T08:40:51.426Z</updated>
    
    <content type="html"><![CDATA[<p>みなさま、こんにちは。WSUS サポート チームです。</p><p>今回は、WSUS クライアントの仕組みについて、ご紹介していきたいと思います。<br>クライアント はどのような流れで WSUS から更新プログラムの取得するのか、その仕組みについてご紹介したいと思います。仕組みの理解やトラブルシューティングの際にお役立ていただける情報となっていますので是非ご一読ください！  </p><h1 id="WSUS-クライアントの仕組み"><a href="#WSUS-クライアントの仕組み" class="headerlink" title="WSUS クライアントの仕組み"></a>WSUS クライアントの仕組み</h1><p>クライアントが WSUS から更新プログラムを取得するまでの流れは以下の通りです。</p><ol><li>WSUS へ検出処理を実施  </li><li>承認情報の取得  </li><li>ダウンロード及びインストール処理実施  </li></ol><p><img src="/blog/wsus/2023-05-02_01/2023-05-02_01_1.png"></p><p>解説</p><ol><li>WSUS サーバーへ検出処理を実施<br>クライアントは、自動更新の検出動作に基づき、既定で約 22 時間毎に WSUS へ更新プログラムの検出処理を行い、自らに適用が可能か否かを確認する処理を行っています。更新プログラムのメタデータには、検出ロジックと呼ばれる検出条件が組み込まれており、クライアントが更新プログラムを検出するためには、その条件を満たしていることが必要です。WSUS へ検出処理を行う際は、WSUS の IIS を介して WSUS データベース (SUSDB) にアクセスする動作となります。なお、検出処理完了後、クライアントは 更新プログラムの適用状態などを状態レポートとして WSUS へ送信します。状態レポートの詳細については、<a href="https://jpmem.github.io/blog/wsus/2022-07-07_01/">WSUS の仕組み レポート編</a>  をご参照下さい。</li></ol><p>以下は検出条件の一例です。<br>◆2023-04 x64 ベース システム用 Windows 10 Version 22H2 の累積更新プログラム (KB5025221)<br>•    2021 年 5 月 11 日 (KB5003173) 以降の LCU がない場合は、2021 年 8 月 10 日SSU (KB5005260) がインストールされていること  </p><p>◆Windows 11(ビジネス エディション)バージョン 22H2 ja-jp x64<br>・Windows 10 Version 1909 以降であること<br>・システム要件を満たしていること  </p><p>※検出条件は更新プログラムごとに異なり、上記はあくまでも検出条件の部分的な一例となりますので参考までとしていただけますと幸いです。</p><ol start="2"><li><p>承認情報の取得<br>WSUS サーバーで承認されており、かつ、1 の検出処理で検出された更新プログラムのみがダウンロードされます。</p></li><li><p>ダウンロード及びインストール処理実施<br>自動更新の設定に基づき、ダウンロード及びインストールの処理が行われます。<br>クライアントは IIS を介して WSUS サーバーの WSUSContent フォルダにアクセスし、その中に格納された更新プログラムコンテンツファイルをダウンロードします。<br>コンテンツファイルの格納先の確認方法については、<a href="https://jpmem.github.io/blog/wsus/2022-06-06_01/">WSUS の仕組み ダウンロード編</a>  の記事下方の補足情報に記載がございますのでご参照下さい。<br>コンテンツファイルのダウンロード後、OS 側に処理が引き継がれ更新プログラムのインストールが行われます。なお、検出処理完了後と同様に、ダウンロード完了後、インストール完了後にクライアントは WSUS へ状態レポートを送信します。</p></li></ol><p>参考情報：<br><a href="https://learn.microsoft.com/ja-jp/windows-server/administration/windows-server-update-services/deploy/4-configure-group-policy-settings-for-automatic-updates#configure-automatic-updates">自動更新の構成</a><br><a href="https://learn.microsoft.com/ja-jp/windows-server/administration/windows-server-update-services/deploy/4-configure-group-policy-settings-for-automatic-updates#automatic-updates-detection-frequency">自動更新の検出頻度</a></p><h1 id="トラブルシュート方法"><a href="#トラブルシュート方法" class="headerlink" title="トラブルシュート方法"></a>トラブルシュート方法</h1><p>更新プログラムの適用に失敗するなどの事象発生時にはログを確認し、どのフェーズで失敗しているかを確認することが問題の切り分けに有効な手段となります。検出、ダウンロード、インストールの処理については、ReportingEvents.log にて簡易的にご確認いただけます。ログの見方については、<a href="https://jpmem.github.io/blog/wsus/2018-02-02_01/">ReportingEvents.log の見方</a>をご参照ください。<br>（インストール処理のログについては、その更新プログラムの名称が記録されますが、ダウンロード処理のログに関しては、更新プログラムの UpdateID で記録されます。※UpdateID は WSUS コンソールにて更新プログラムをクリックした際の下方に表示される “その他の詳細” より確認いただけます。）<br><img src="/blog/wsus/2023-05-02_01/2023-05-02_01_2.png"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;みなさま、こんにちは。WSUS サポート チームです。&lt;/p&gt;
&lt;p&gt;今回は、WSUS クライアントの仕組みについて、ご紹介していきたいと思います。&lt;br&gt;クライアント はどのような流れで WSUS から更新プログラムの取得するのか、その仕組みについてご紹介したいと思います</summary>
      
    
    
    
    
    <category term="WSUS" scheme="https://jpmem.github.io/blog/tags/WSUS/"/>
    
  </entry>
  
  <entry>
    <title>カスタム セキュリティ ロールで RBAC を設計する方法(RBA Viewer の基本的な使い方)</title>
    <link href="https://jpmem.github.io/blog/mecm/20230412_01/"/>
    <id>https://jpmem.github.io/blog/mecm/20230412_01/</id>
    <published>2023-04-11T15:00:00.000Z</published>
    <updated>2023-07-06T08:40:51.294Z</updated>
    
    <content type="html"><![CDATA[<p>みなさま、こんにちは。Configuration Manager サポート チームです。  </p><p>今回は、Configuration Manager にカスタム セキュリティ ロールを作成し、管理コンソールのアクセス制御を行う方法をご案内します。</p><p>Configuration Manager にはロールベースのアクセス制御を行う機能が備わっており、「完全な権利を持つ管理者」や「読み取り専用アナリスト」など、異なるアクセス許可の組み合わせを割り当て済みの幾つかのセキュリティ ロールが予め用意されています。そして、任意のユーザーやグループに一つ以上のセキュリティ ロールを割り当てることで、ロール ベースのアクセス制御(RBAC)を実現することが可能です。</p><p><a href="https://learn.microsoft.com/ja-jp/mem/configmgr/core/servers/deploy/configure/configure-role-based-administration">Configuration Managerのロールベースの管理を構成する</a></p><p>更に、組み込みのセキュリティ ロールとは異なる単位でアクセス許可を設定したい場合は、任意のアクセス許可を割り当てたカスタム セキュリティ ロールを新規に作成することが可能ですが、各アクセス許可が具体的にどの操作を表すか、アクセス許可の名称からは判断が難しい場合があるため、アクセス許可と管理コンソール上の操作との紐づけについてしばしばお問い合わせいただくことがあります。</p><p><img src="/blog/mecm/20230412_01/20230412_01_01.png" alt="図 1: アクセス許可の例"></p><p>実際にアクセス許可を割り当てた上で動作確認する方法もありますが、この様な場合は、Configuration Manager ツールと呼ばれる付属ツール一式に含まれる「RBA Viewer」をご利用いただくことをお勧めします。RBA Viewer は、実際の管理コンソール上の各項目にどのアクセス許可が必要か確認しながらセキュリティ ロールを設計し、設計した内容を管理コンソールからインポート可能な形式でエクスポート可能なツールです。また、既存のセキュリティ ロールを読み込み、管理コンソール上の表示のイメージの確認を行うことも可能です。</p><p>そこで当記事では、RBA Viewer の使用にフォーカスしながら、実際にアクセス許可を構成し、カスタム セキュリティ ロールを作成するまでの流れをご説明します。</p><p>なお、Configuration Manager では、セキュリティ ロールとは別に、セキュリティ スコープを併用することで更に各オブジェクトのアクセス制御を行うことが可能です。また、管理ユーザー単位で各コレクションへのアクセスを制御することも可能ですが、いずれも当記事では触れません。セキュリティ ロールと併せて設定を行う場合は、それぞれ以下のドキュメントをご確認ください。</p><ul><li><a href="https://learn.microsoft.com/ja-jp/mem/configmgr/core/servers/deploy/configure/configure-role-based-administration#configure-security-scopes-for-an-object">セキュリティ スコープの構成方法</a></li><li><a href="https://learn.microsoft.com/ja-jp/mem/configmgr/core/servers/deploy/configure/configure-role-based-administration#configure-collections-to-manage-security">コレクションのアクセス許可</a></li></ul><h2 id="RBA-Viewer-の概要"><a href="#RBA-Viewer-の概要" class="headerlink" title="RBA Viewer の概要"></a>RBA Viewer の概要</h2><p>製品のドキュメントとしては以下でご案内しています。実行前に前提条件をご確認ください。</p><p><a href="https://learn.microsoft.com/ja-jp/mem/configmgr/core/support/rbaviewer">ロールベース管理および監査ツール</a></p><p>RBA Viewer は、バージョン 2107 以降は管理コンソールとともにインストールされますが、スタートメニューには表示されないため、起動する場合は管理コンソールのインストール先ディレクトリ(既定では <code>\Program Files (x86)\Microsoft Endpoint Manager\AdminConsole\bin</code>)内の <code>RBAViewer.exe</code> を直接実行します。必要に応じてショートカットを作成しておくと良いです。</p><p>RBA Viewer を起動すると、図 2 の様なウィンドウが起動します。</p><p><img src="/blog/mecm/20230412_01/20230412_01_02.png" alt="図 2: RBA Viewer のウィンドウ"></p><p>カスタム セキュリティ ロールを設計する際は、基本的には以下の流れで操作を行うことになりますが、詳細は以下のセクションで随時ご説明します。</p><ol><li>左上の [Security Roles] からベースとなるセキュリティ ロールを選択し、読み込む</li><li>左下の [Analyze] ボタンをクリックし、選択済みのアクセス許可の内容を、右側の Admin Console タブに反映する</li><li>右側の Admin Console タブでアクセスが必要/不要な項目を確認し、左側のアクセス許可の有効化/無効化を行う</li><li>Admin Console タブの内容が満足する結果となるまで 2 と 3 を繰り返す</li><li>選択したアクセス許可を左下の [Export] ボタンで XML ファイルにエクスポートする</li><li>管理コンソールで、XML ファイルをカスタム セキュリティ ロールとしてインポートする</li><li>管理コンソールで、インポートしたカスタム セキュリティ ロールの動作確認を行う</li></ol><h2 id="既存のセキュリティ-ロールのアクセス許可を確認する"><a href="#既存のセキュリティ-ロールのアクセス許可を確認する" class="headerlink" title="既存のセキュリティ ロールのアクセス許可を確認する"></a>既存のセキュリティ ロールのアクセス許可を確認する</h2><p>RBA Viewer を起動した直後は全てのアクセス許可が選択された状態ですが、[Security Roles] から既存のセキュリティ ロールを選択することで、そのセキュリティ ロールに割り当てられているアクセス許可のみが選択された状態になります。[Security Roles] から選択可能なセキュリティ ロールは、カスタム セキュリティ ロールを除き英語表記となりますが、概ね直訳のため、以下のリンク先を参考に選択ください。</p><p><a href="https://learn.microsoft.com/ja-jp/mem/configmgr/core/understand/fundamentals-of-role-based-administration#security-roles">組み込みのセキュリティ ロール一覧</a></p><p>今回は、組み込みのセキュリティ ロールの一つである「読み取り専用アナリスト(Read-only Analyst)」を選択することにします。読み取り専用アナリストは、その名の通り読み取り専用のロールであり、基本的に変更操作を行えない様にアクセス許可が割り当てられています。そのため、読み取り専用アナリストをベースにして不要なアクセス許可を削除することで、権限の弱いロールを設計することが可能です。</p><p>それでは実際に [Security Roles] からセキュリティ ロール「Read-only Analyst」を選択し、読み込んでみます。セキュリティ ロールの読み込みを行うと、図 3 の様に左側のアクセス許可の幾つかが有効化されます。なお、管理コンソールからカスタム セキュリティ ロールを新規作成する場合はベースとなるセキュリティ ロールの選択が必要ですが、RBA Viewer で設計を行うにあたっては、既存のセキュリティ ロールの読み込みは必ずしも必要ではありません。例えばごく一部の項目のみ表示可能なロールを設計したい場合は、読み込みを行わずにゼロからアクセス許可を追加した方が早いこともありますので、ニーズに合わせて判断ください。</p><p><img src="/blog/mecm/20230412_01/20230412_01_03.png" alt="図 3: 読み取り専用アナリスト(Read-only Analyst) 選択後"></p><p>セキュリティ ロールの読み込み直後は、右側の Admin Console タブに変化はありません。アクセス許可の有効化や無効化を行っても即時に反映されないため、現在のアクセス許可に基づく管理コンソールのイメージを確認したい場合は、[Analyze] をクリックする必要があります。アクセス許可を変更した際は、クリックを忘れないようにご注意ください。</p><p>Admin Console タブ内は、実際の管理コンソールの様に各メニュー項目をクリックし動作を確認することが可能です。例えば <code>[ソフトウェア ライブラリ] - [概要] - [アプリケーション管理] - [パッケージ]</code> を選択すると図 4 の様に表示されますが、この画面に到るまでに管理コンソール上に <code>[ソフトウェア ライブラリ]</code> のメニュー項目が表示されており、更に <code>[パッケージ]</code> が選択可能となっていた筈です。これは、現在のアクセス許可の選択に基づいた場合、それぞれが表示および選択可能となっていることを表します。すなわち、Admin Console タブ内で実際にできることが管理コンソールでできることになるため、実際の管理コンソールを操作しなくてもイメージを掴むことが可能です。なお、Admin Console タブには、選択したメニュー項目によって実際のレコードの内容が表示されますが、RBA Viewer で行った操作が Configuration Manager へ影響を与えることはありませんので、色々な項目の表示を試してみてください。</p><p><img src="/blog/mecm/20230412_01/20230412_01_04.png" alt="図 4: パッケージの選択後"></p><p>ここまでの操作でお気づきかもしれませんが、Admin Console タブで項目を選択すると、画面右側の「Tasks」の下に、「Actions」や「Query Actions」という項目が表示されます。これらはメニュー項目内で実施できるアクションの分類を表しますが、それぞれ以下の意味です。</p><ul><li>Actions: レコードに関係なく、その項目内で実行可能なアクション(コンソール画面上部のボタン)</li><li>Query Actions: その項目内に表示されるレコードに対して実行可能なアクション(レコードを選択した状態で表示されるコンソール画面上部のボタンや右クリックメニューの内容)</li></ul><p>また、それぞれの分類の配下に表示されているアクションの内容により文字色が黒であったりグレーであったりしますが、それぞれ以下の意味です。</p><ul><li>黒: 実行が許可されているアクション</li><li>グレー: 実行が許可されていないアクション</li></ul><p>例えば <code>[ソフトウェア ライブラリ] - [概要] - [アプリケーション管理] - [パッケージ]</code> の場合は、図 4 では</p><ul><li>Actions<ul><li>作成=&gt;(グレー)</li></ul></li><li>Query Actions<ul><li>パッケージ=&gt;(黒)</li><li>パッケージ変換=&gt;(グレー)</li><li>展開=&gt;(黒)</li><li>分類=&gt;(グレー)</li><li>プロパティ=&gt;(黒)</li></ul></li></ul><p>の様に表示されていますが、これはパッケージの作成は不可であるものの、既存の各パッケージに対する一部のアクションが許可されていることを表します。なお、各アクションの末尾に「=&gt;」が付与されている場合はそのアクションは入れ子になっていることを表し、例えば上記は [展開] が黒ですが、この場合はパッケージの展開が可能と判断するのではなく、[展開] をクリックして表示される配下のアクションの状態を確認して判断します。</p><p>実際に [展開] をクリックすると図 5 の様に</p><ul><li>展開=&gt;(黒)<ul><li>展開(グレー)</li><li>コンテンツの配布(黒)</li><li>配布ポイントの更新(グレー)</li></ul></li></ul><p>であることを確認できますが、これ以上入れ子になっていないため、この時点で [コンテンツの配布] が許可されていると判断可能です。</p><p><img src="/blog/mecm/20230412_01/20230412_01_05.png" alt="図 5: 展開をクリックした後"></p><p>ここまでで、セキュリティ ロールの読み込みから Admin Console タブの確認方法をご説明しましたが、次のセクションからは実際にセキュリティ ロールを設計する上で必要となるアクセス許可の追加や削除の方法についてご説明します。</p><h2 id="必要なアクセス許可を追加する"><a href="#必要なアクセス許可を追加する" class="headerlink" title="必要なアクセス許可を追加する"></a>必要なアクセス許可を追加する</h2><p>実行が許可されていないアクションはグレーの文字で表示されることをご説明しましたが、各アクションの許可をするためには何らかのアクセス許可を付与する必要があります。具体的にどのアクセス許可が必要となるかは、該当のアクションにマウスのカーソルを置くと表示されるポップアップの内容から確認できます。</p><p><img src="/blog/mecm/20230412_01/20230412_01_06.png" alt="図 6: 項目にマウスのカーソルを置いた場合"></p><p>例えば図 6 では、パッケージの [展開] がグレーアウトされている状態で [展開] にカーソルを置くと</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">コレクション: Read/Deploy Packages</span><br><span class="line">パッケージ: Read</span><br></pre></td></tr></table></figure><p>と表示されていますが、これは、[展開] を行うためにはコレクションの Read および Deploy Packages とパッケージの Read のアクセス許可が必要であることを表します。すなわち、これらのアクセス許可を追加することで、パッケージの [展開] が可能となることが分かります。実際にそれぞれのアクセス許可をウィンドウの左側から探して有効化し [Analyze] をクリックすると、図 7 の様に [展開] がグレーから黒へ変わります。</p><p><img src="/blog/mecm/20230412_01/20230412_01_07.png" alt="図 7: アクセス許可を追加後"></p><p>この様に、管理コンソールから行いたい操作や表示したい項目にマウスのカーソルを置くことで必要なアクセス許可を確認することができます。</p><p>なお、日本語版の管理コンソールでは Read や Deploy Package の部分はそれぞれ「読み取り」と「パッケージの展開」と翻訳されるため表記は異なりますが、RBA Viewer からエクスポートした XML ファイルを管理コンソールにインポートした後は、日本語表記へ置き換わります。</p><h2 id="不要なアクセス許可を削除する"><a href="#不要なアクセス許可を削除する" class="headerlink" title="不要なアクセス許可を削除する"></a>不要なアクセス許可を削除する</h2><p>実行可能なアクションや表示可能な項目を不許可にしたり非表示にする場合は、アクセス許可の追加時と同じ要領でアクセス許可を確認し、それらを無効化することで可能です。</p><p>例えば <code>[ソフトウェア ライブラリ] - [概要] - [アプリケーション管理] - [パッケージ]</code> の場合は</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">パッケージ: Read</span><br></pre></td></tr></table></figure><p>のアクセス許可が必要ですが、これを無効化することで図 8 の様に非表示にすることが可能です。</p><p><img src="/blog/mecm/20230412_01/20230412_01_08.png" alt="図 8: パッケージを非表示にした状態"></p><h2 id="設計内容を-Configuration-Manager-へインポートする"><a href="#設計内容を-Configuration-Manager-へインポートする" class="headerlink" title="設計内容を Configuration Manager へインポートする"></a>設計内容を Configuration Manager へインポートする</h2><p>セキュリティ ロールの設計が完了したら、[Export] ボタンをクリックすることで XML ファイルへエクスポートすることができますが、この XML ファイルを管理コンソールからインポートを行うことで、一つのセキュリティ ロールとして扱える様になります。</p><p>XML ファイルをインポートする際は、図 9 の様に管理コンソールで <code>[管理] - [概要] - [セキュリティ] - [セキュリティ ロール]</code> を開き、[セキュリティ ロールのインポート] をクリックします。インポート後は、ファイル名と同じ名称のセキュリティ ロールが作成されます(名称は変更可能です)。実際に管理コンソールで動作確認を行った上で、正式に利用いただければ幸いです。</p><p><img src="/blog/mecm/20230412_01/20230412_01_09.png" alt="図 9: セキュリティ ロールのインポート"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;みなさま、こんにちは。Configuration Manager サポート チームです。  &lt;/p&gt;
&lt;p&gt;今回は、Configuration Manager にカスタム セキュリティ ロールを作成し、管理コンソールのアクセス制御を行う方法をご案内します。&lt;/p&gt;
&lt;p&gt;C</summary>
      
    
    
    
    
    <category term="MECM" scheme="https://jpmem.github.io/blog/tags/MECM/"/>
    
  </entry>
  
  <entry>
    <title>Configuration Manager のリリース サイクル変更のお知らせ</title>
    <link href="https://jpmem.github.io/blog/mecm/20230404_01/"/>
    <id>https://jpmem.github.io/blog/mecm/20230404_01/</id>
    <published>2023-04-03T15:00:00.000Z</published>
    <updated>2023-07-06T08:40:51.294Z</updated>
    
    <content type="html"><![CDATA[<p>みなさま、こんにちは。Configuration Manager サポート チームです。  </p><p>この度、Configuration Manager のリリース サイクルの変更が <a href="https://techcommunity.microsoft.com/t5/configuration-manager-blog/bg-p/ConfigurationManagerBlog">Configuration Manager Blog</a> にて発表されましたので、本ブログでもお知らせいたします。具体的な内容は、次の通りです。</p><ul><li>リリース サイクルが年 3 回 (XX03, XX07, XX11) から年 2 回 (XX03, XX09) となります。</li><li>ベースライン バージョンは XX03 となります。(従来から変更はありません。)</li><li>Technical Preview（TP）は、年 4 回のリリースとなり、その中の 2 つは、本番リリース前にリリースされます。</li><li>サポート サイクルはリリース日から 18 ヶ月間です。(従来から変更はありません。)</li></ul><p>詳細は、Configuration Manager Blog の <a href="https://techcommunity.microsoft.com/t5/configuration-manager-blog/release-cadence-changes-to-microsoft-configuration-manager/ba-p/3785508">Release Cadence Changes to Microsoft Configuration Manager</a> にてご案内しておりますので、ご確認くださいますようお願いいたします。</p><h2 id="抄訳"><a href="#抄訳" class="headerlink" title="抄訳"></a>抄訳</h2><p>この記事では、Microsoft Configuration Manager のリリース サイクル変更に関する情報についてご案内します。Configuration Manager 2303 ベースライン バージョンのリリース後、新しいリリース サイクルを導入します。<br>Configuration Manager の以前のアップデートで導入された変更、ブランディング、およびベースラインについては、<a href="https://learn.microsoft.com/ja-jp/mem/configmgr/core/plan-design/changes/whats-new-incremental-versions">Configuration Manager増分バージョンの新機能</a>、<a href="https://learn.microsoft.com/ja-jp/mem/configmgr/core/understand/configuration-manager-faq">Microsoft Configuration Manager FAQ</a>、および、<a href="https://learn.microsoft.com/ja-jp/mem/configmgr/core/servers/manage/updates#bkmk_Baselines">ベースラインと更新プログラムのバージョン</a>を参照してください。</p><p>Windows が年 1 回の更新モデルに移行しており、Configuration Manager も<strong>年 3 回の更新から 2 回の更新に移行</strong>することで、そのサイクルに合わせます。2303 以降の Microsoft Configuration Manager の次のリリースは、2023 年 9 月、バージョン2309 になります。事実上、xx07 と xx11 のアップデートは、xx09 のアップデートに統合されることになります。アップデートの統合により、このリリースに機能強化が組み込まれることになります。また、もう 1 つのメリットとして、お客様が毎年管理しなければならない展開の数を減らすことができます。</p><p>この変更により、Windows のリリース サイクルとの整合性が向上し、Configuration Manager の展開の管理が軽減されるとともに、Configuration Manager の開発サイクルが長くなることで、高品質のアップデートを提供し続けながら、お客様からの主要な機能要求に対応できるようになります。この変更と開発サイクルの延長により、Configuration Manager 2309 のアップデートでは、<strong>ポリシーの同期、ソフトウェア更新プログラムのトラブルシューティング、アラートやダッシュボード機能の改善など、お客様から寄せられた主要な要望に対応することができます</strong>。また、Hotfix ロールアップとセキュリティ更新プログラムは、重要なバグに対処するため、必要に応じて引き続き提供されます。</p><p><strong>リリース サイクル変更の概要</strong>  </p><ul><li>2023 年から、Configuration Manager のリリースは、従来の xx03、xx07、xx11 から、3月（xx03）、9月（xx09）の 2 回に変更されます。</li><li>ベースライン バージョンは、新しい Configuration Manager のサイトと階層のインストール、またはサポートされているバージョンの Configuration Manager からのアップグレードに使用することができます。2303、2403…がベースライン リリースになります。 </li><li>Technical Preview（TP）は、年に 4 回リリースします。2 つは、各 Current Branch バージョンの本番リリース前にリリースされます。また、Technical Preview リリースの中の 1 つはベースライン リリースとなります。(Technical Preview ベースラインの評価期間は、180 日です。）</li><li>  現在の Current Branch サポート サイクルに変更はありません。各 Current Branch バージョンは、一般提供のリリース日から 18 ヶ月間、サポートが継続されます。詳細は、<a href="https://learn.microsoft.com/ja-jp/mem/configmgr/core/servers/manage/current-branch-versions-supported">現在のブランチ バージョンConfiguration Managerサポート</a>を参照してください。</li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;みなさま、こんにちは。Configuration Manager サポート チームです。  &lt;/p&gt;
&lt;p&gt;この度、Configuration Manager のリリース サイクルの変更が &lt;a href=&quot;https://techcommunity.microsoft.c</summary>
      
    
    
    
    
    <category term="MECM" scheme="https://jpmem.github.io/blog/tags/MECM/"/>
    
  </entry>
  
  <entry>
    <title>ソフトウェアの更新ポイントがクライアントのスキャン先として設定されない原因と対応の例 - CWuaHandler::SetCategoriesForStateReportingExclusion</title>
    <link href="https://jpmem.github.io/blog/mecm/20230327_01/"/>
    <id>https://jpmem.github.io/blog/mecm/20230327_01/</id>
    <published>2023-03-26T15:00:00.000Z</published>
    <updated>2023-07-06T08:40:51.294Z</updated>
    
    <content type="html"><![CDATA[<p>みなさま、こんにちは。Configuration Manager サポート チームです。  </p><p>今回は、Configuration Manager でソフトウェアの更新ポイント(以下、SUP と呼びます)を構成している環境で、クライアントのスキャン先が SUP とならない原因とその対応の例についてご案内します。具体的には、Configuration Manager クライアントのログの一つであるWUAHandler.log に</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">CWuaHandler::SetCategoriesForStateReportingExclusion</span><br></pre></td></tr></table></figure><p>が記録されているケースを取り上げます。</p><p>Configuration Manager で更新プログラムを配信するためには、クライアントは SUP の役割を持ったサイト サーバーに対して更新プログラムのスキャンを行い、スキャンの結果、その更新プログラムが必要と判定されている必要があります。その後、その更新プログラムを含む展開ポリシーを受け取ったクライアントは、更新プログラムを配布ポイント等からダウンロードします。</p><p>サイト サーバーとクライアントが適切に構成されていれば、通常はクライアントのスキャン先はスキャンを行うタイミングで境界グループに基づき自動で SUP を向く様に構成されますが、もし構成されない場合はスキャンを行えず、その結果、クライアントに更新プログラムが配信されません。あるいは、環境によっては意図せず Microsoft Update 経由で更新プログラムがインストールされてしまうこともあります。</p><p>上記のメッセージが WUAHandler.log に記録されており、クライアントのスキャン先として SUP が設定されていないことが判明した場合は、以下にご案内する方法をお試しください。</p><h2 id="事象を特定する"><a href="#事象を特定する" class="headerlink" title="事象を特定する"></a>事象を特定する</h2><p>Configuration Manager クライアントが更新プログラムのスキャンを実行した際は、ローカル グループ ポリシー(ポリシー名「イントラネットの Microsoft 更新サービスの場所を指定する」)経由でスキャン先が構成されますが、構成された結果、設定値は <code>HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\Windows\WindowsUpdate</code> 以下のレジストリ値 <code>WUServer</code> および <code>WUStatusServer</code> に反映されます。例えば、通常は以下のように設定されます。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\Windows\WindowsUpdate]</span><br><span class="line">&quot;WUServer&quot;=&quot;http://&lt;SUP の FQDN&gt;:8530&quot;</span><br><span class="line">&quot;WUStatusServer&quot;=&quot;http://&lt;SUP の FQDN&gt;:8530&quot;</span><br></pre></td></tr></table></figure><p>もしこれらのレジストリ値が設定されていない場合は正しくスキャン先が設定されていないことになり、SUP に対してスキャンが行われません。このとき、更にクライアントの <code>C:\Windows\CCM\Logs\WUAHandler.log</code> に以下で始まるメッセージが記録されている場合、当記事のケースに該当すると判断できます。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">CWuaHandler::SetCategoriesForStateReportingExclusion</span><br></pre></td></tr></table></figure><h2 id="原因と解決策"><a href="#原因と解決策" class="headerlink" title="原因と解決策"></a>原因と解決策</h2><p>原因としては設定に起因する場合と何らかの問題に起因する場合が考えられますが、境界グループの設定あるいはクライアント設定に起因するお問い合わせを多く頂いていますので、まずは以下のセクションの内容をご確認ください。いずれも問題ない場合は詳細な調査が必要となるため、弊社サポート窓口までお問い合わせいただければ幸いです。</p><h3 id="境界グループの設定"><a href="#境界グループの設定" class="headerlink" title="境界グループの設定"></a>境界グループの設定</h3><p>クライアントが SUP をスキャン先として使用するためには、予め SUP を境界グループに追加しておく必要があります。更に、その境界グループにクライアントが紐づいている必要があります。いずれかが満たされない場合はクライアントは SUP を認識できず、スキャン先として設定できません。</p><p>状況を確認するためには、まずクライアントが紐づく境界グループを特定する必要があります。方法は幾つかありますが、例えば管理コンソールの <code>[資産とコンプライアンス] - [概要] - [デバイス]</code> に「境界グループ」列を表示させることで確認可能です(列名が表示されている部分を右クリックすると表示する列を変更できます)。もし境界グループ列に何も表示されていない場合は、どの境界グループにも紐づいていない状態ですので、クライアントを境界グループに紐づけてください。</p><p><img src="/blog/mecm/20230327_01/20230327_01_01.png" alt="デバイス一覧から境界グループを確認可能"></p><p>クライアントと境界グループの紐づけに問題がなければ、次に管理コンソールの <code>[管理] - [概要] - [階層の構成] - [境界グループ]</code> から該当の境界グループのプロパティを開き、「参照」タブ内に SUP の役割を持つサーバーが含まれることを確認します。SUP が含まれていない場合は、その境界グループに紐づくクライアントは参照する SUP が存在しないことになるため、更新プログラムのスキャンに失敗します。そのため、境界グループへ SUP の追加が必要になります。</p><p>境界グループへのクライアントの紐づけやサーバーを追加する手順は以下の記事が参考になりますので、該当する場合は必要に応じて参照ください。</p><p><a href="https://jpmem.github.io/blog/mecm/20180706_02/">参考記事: Configuration Manager から配信しているコンテンツのダウンロードが開始されない</a></p><h3 id="クライアント設定"><a href="#クライアント設定" class="headerlink" title="クライアント設定"></a>クライアント設定</h3><p>クライアントがローカル グループ ポリシー経由でスキャン先等を設定するためには、クライアント設定 [クライアントのソフトウェア更新プログラムを有効にする] を [はい] へ設定する必要があります。</p><p><img src="/blog/mecm/20230327_01/20230327_01_02.png" alt="該当の設定はソフトウェア更新プログラム配下にあります"></p><p>この設定を有効化しないと、境界グループに問題がない場合もスキャン先が設定されません。既定では有効化される項目ですが、意図せず無効化していないかご確認ください。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;みなさま、こんにちは。Configuration Manager サポート チームです。  &lt;/p&gt;
&lt;p&gt;今回は、Configuration Manager でソフトウェアの更新ポイント(以下、SUP と呼びます)を構成している環境で、クライアントのスキャン先が SUP </summary>
      
    
    
    
    
    <category term="MECM" scheme="https://jpmem.github.io/blog/tags/MECM/"/>
    
  </entry>
  
  <entry>
    <title>WSUS 経由で WebView2 Runtime を更新する手順</title>
    <link href="https://jpmem.github.io/blog/wsus/2023-03-27_01/"/>
    <id>https://jpmem.github.io/blog/wsus/2023-03-27_01/</id>
    <published>2023-03-26T15:00:00.000Z</published>
    <updated>2023-07-06T08:40:51.422Z</updated>
    
    <content type="html"><![CDATA[<p>みなさま、こんにちは。WSUS サポート チームです。</p><p>今回は、WSUS 経由で WebView2 Runtime を更新する手順をご紹介いたします。<br>WSUS より WebView2 Runtime の更新を 管理する場合に参考となるかと存じますので是非ご一読ください。<br>なお、本記事は WebView2 Runtime のバージョンを WSUS 経由で更新する際の手順となります。WebView2 Runtime の初期インストールにつきましては、WSUS から配信することはできませんのでご留意ください。  </p><h1 id="1-WebView2-の自動更新を制御する"><a href="#1-WebView2-の自動更新を制御する" class="headerlink" title="1. WebView2 の自動更新を制御する"></a>1. WebView2 の自動更新を制御する</h1><p>WSUSで WebView2 Runtime の更新を管理する場合、WebView2 Runtime 自動更新を制御しておく必要があります。以下の公開ブログにてご案内させていただいております WebView2 Runtime の更新制御するためのポリシーまたはレジストリを追加いただくようお願いいたします。なお、こちらのポリシーについては Active Directory 配下のクライアントである必要がございますのでご留意ください。  <a href="https://jpdsi.github.io/blog/internet-explorer-microsoft-edge/how-and-why-to-update-edge/#4-WebView2-%E3%81%AE%E6%9B%B4%E6%96%B0%E5%88%B6%E5%BE%A1">4) WebView2 の更新制御</a></p><h1 id="2-WSUS-から-WebView2-の更新を配信する"><a href="#2-WSUS-から-WebView2-の更新を配信する" class="headerlink" title="2. WSUS から WebView2 の更新を配信する"></a>2. WSUS から WebView2 の更新を配信する</h1><p>WSUS コンソールで [ オプション ] &gt; [ 製品と分類 ] を開きます。<br>製品： Microsoft Edge 、分類： 更新 にチェックを追加し、更新プログラムを同期します。<br><img src="/blog/wsus/2023-03-27_01/2023-03-27_01_1.png">  </p><p>WebView2 Runtime 向けの更新プログラムが同期されますので、WSUS にて承認作業を行います。<br><img src="/blog/wsus/2023-03-27_01/2023-03-27_01_2.png"></p><p>クライアントが WSUS にアクセスしたタイミングで承認情報を受け取り、更新プログラムの適用処理が行われます。具体的には、クライアントは、（ランダム時間を含む）既定で約 22 時間毎に WSUS へ検出処理が行われ、自動更新の設定に基づきダウンロード、インストールの処理を実施します。<br><img src="/blog/wsus/2023-03-27_01/2023-03-27_01_3.png"></p><p>WebView2 Runtime のバージョンが更新されます。<br>更新プログラム適用前<br><img src="/blog/wsus/2023-03-27_01/2023-03-27_01_4.png"></p><p>更新プログラム適用後<br><img src="/blog/wsus/2023-03-27_01/2023-03-27_01_5.png"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;みなさま、こんにちは。WSUS サポート チームです。&lt;/p&gt;
&lt;p&gt;今回は、WSUS 経由で WebView2 Runtime を更新する手順をご紹介いたします。&lt;br&gt;WSUS より WebView2 Runtime の更新を 管理する場合に参考となるかと存じますので是</summary>
      
    
    
    
    
    <category term="WSUS" scheme="https://jpmem.github.io/blog/tags/WSUS/"/>
    
  </entry>
  
  <entry>
    <title>Microsoft Configuration Manager 自習書シリーズ 1 Microsoft Configuration Manager とは</title>
    <link href="https://jpmem.github.io/blog/mecm/20230316_01/"/>
    <id>https://jpmem.github.io/blog/mecm/20230316_01/</id>
    <published>2023-03-15T15:00:00.000Z</published>
    <updated>2023-07-06T08:40:51.290Z</updated>
    
    <content type="html"><![CDATA[<p>皆様、Microsoft Configuration Manager サポート チームの箱木です。</p><p>本日より、本ブログの連載企画として Microsoft Configuration Manager の公開情報などを整理し、これから管理者となる方や導入を検討されている方が知っておくべきポイントなどをお伝えする予定です。</p><p>今回は公開情報：<a href="https://learn.microsoft.com/ja-jp/mem/configmgr/core/understand/introduction">Configuration Manager とは</a> をベースに Microsoft Configuration Manager の歴史や機能についてご紹介します。</p><p>現在の最新バージョンである Configuration Manager (Current Branch) では、本製品の所属するブランドについて、以下のように記述されております。</p><blockquote><p><strong>Configuration Managerは、Microsoft Intune製品ファミリの一部です。</strong></p></blockquote><p>Configuration Manager は過去 Microsoft 社内のデバイス構成を管理することが目的に開発され、1994 年に Systems Management Server 1.0 として製品化されました。<br>その後 Systems Management Server 2003 、System Center Configuration Manager 2007 、System Center 2012 Configuration Manager を経て現在の Configuration Manager (Current Branch) に進化してきた歴史があります。<br>主にオンプレミスにあるデバイスを管理する目的の製品群である System Center 製品ファミリーでしたが、現在は上記のように <strong>Microsoft Cloud のパワーを利用しながら、Configuration Manager への既存の投資を活かしつづける</strong> ことが現在の Intune 製品ファミリーとなった背景です。</p><h1 id="概要"><a href="#概要" class="headerlink" title="概要"></a>概要</h1><p>「製品が想定する用途、シナリオ」として、公開情報の <strong>IT の生産性と効率を向上させる</strong> 節でご案内している通り、ハードウェアやソフトウェアに対する展開や分析を行うことが主たる機能です。<br>重要なポイントは Configuration Manager は資産管理ツールではなく、構成管理ツールであることを理解しておきましょう。</p><p>ソフトウェア資産管理（SAM）目的に利用できる機能は備えておりますが、製品のデザインや設計思想は <strong>いかに効率よくデバイスを構成、管理するか</strong> が主目的であるため何のために Configuration Manager の機能を利用したいのかを明確にしておくと導入や運用におけるギャップは少なくなるでしょう。</p><h1 id="ユーザー-インターフェース"><a href="#ユーザー-インターフェース" class="headerlink" title="ユーザー インターフェース"></a>ユーザー インターフェース</h1><p>Configration Manager のインターフェースは管理者が操作する Configration Manager コンソールと、管理デバイス上でユーザーが操作可能なソフトウェア センターがあります。</p><p>コンソールは Configration Manager のすべての操作が可能ですが、コンソール起動時の OS の Active Directory ドメイン アカウントやセキュリティ グループを利用して操作範囲を制限したり、操作内容の監査記録を行うことができます。<br><img src="/blog/mecm/20230316_01/2023-03-17-13-53-56.png"></p><p>またユーザーは展開された更新プログラムやアプリケーションをインストールする場合のインターフェースとしてソフトウェア センターとしてインストールされるアプリケーションから操作することができます。<br><img src="/blog/mecm/20230316_01/2023-03-17-13-54-49.png"></p><p>各インターフェースの説明は次回以降の解説をお待ちください。</p><p>次回は <a href="https://learn.microsoft.com/ja-jp/mem/configmgr/core/understand/configuration-manager-faq">Microsoft Configuration Manager FAQ</a> についての解説を公開予定です。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;皆様、Microsoft Configuration Manager サポート チームの箱木です。&lt;/p&gt;
&lt;p&gt;本日より、本ブログの連載企画として Microsoft Configuration Manager の公開情報などを整理し、これから管理者となる方や導入を検討さ</summary>
      
    
    
    
    
    <category term="MECM" scheme="https://jpmem.github.io/blog/tags/MECM/"/>
    
  </entry>
  
  <entry>
    <title>コンプライアンス機能で特定レジストリ値の状態をチェックする方法</title>
    <link href="https://jpmem.github.io/blog/mecm/20230309_01/"/>
    <id>https://jpmem.github.io/blog/mecm/20230309_01/</id>
    <published>2023-03-08T15:00:00.000Z</published>
    <updated>2023-07-06T08:40:51.290Z</updated>
    
    <content type="html"><![CDATA[<p>みなさま、こんにちは。Configuration Manager サポート チーム 山田 です。  </p><p>本日は Configuration Manager のコンプライアンス機能で特定のレジストリ値の状態をチェックする方法についてご紹介いたします。<br>本手順を実施することで、特定のレジストリ値をチェックし、その値になっている場合、クライアントが “準拠している” と判定させることが可能でございます。そのため、以下のようにご判断いただくことができます。  </p><p>準拠している　 ＝ 特定のレジストリ値が設定されている<br>準拠していない ＝ 特定のレジストリ値が設定されていない  </p><p>今回は例として、HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\Windows\WindowsUpdate 配下にある DisableWindowsUpdateAccess というレジストリ値が “1” であることをチェックする方法をご紹介します。  </p><h1 id="手順-1-構成項目の作成"><a href="#手順-1-構成項目の作成" class="headerlink" title="手順 1: 構成項目の作成"></a>手順 1: 構成項目の作成</h1><ol><li>[資産とコンプライアンス] - [概要] - [コンプライアンス設定] - [構成項目] を右クリックし、[構成項目の作成] を選択します。  </li><li>[全般] ページにて、任意の名前を指定し、デバイスの指定において [Windows デスクトップおよびサーバー] を選択し [次へ] をクリックします。  </li><li>[サポートされているプラットフォーム] ページにて、任意で対象の Windows バージョンを選択し「次へ」をクリックします。  </li><li>[設定] ページにて、[新規] をクリックします。  </li><li>[全般] タブにて、任意の名前を指定し以下の設定を行います。<br>・設定の種類 ： レジストリ値<br>・データ型 : 整数<br>・ハイブ名：HKEY_LOCAL_MACHINE<br>・キー名：SOFTWARE\Policies\Microsoft\Windows\WindowsUpdate<br>・値の名前：DisableWindowsUpdateAccess  </li></ol><p><img src="/blog/mecm/20230309_01/2023-03-09-14-08-41.png"></p><ol start="6"><li>[コンプライアンス規則] タブにて、[新規] をクリックし以下の設定を行い [OK] を選択します。<br>・名前：任意の名前<br>・規則の種類：値<br>・演算子：次の値と等しい<br>・次の値の場合：1<br>・サポートされている場合は準拠していない規則を修正する : オフ<br>・この設定インスタンスが見つからない場合はコンプライアンス違反としてレポートする : オン  </li></ol><p><img src="/blog/mecm/20230309_01/2023-03-09-14-08-01.png"></p><p>※注意：[この設定インスタンスが見つからない場合はコンプライアンス違反としてレポートする] チェックは必ず “オン” に設定してください。オフの場合、該当のレジストリ値が存在しない場合、”準拠している” と判定されます。</p><ol start="7"><li>[次へ] を選択していき、構成項目の作成を完了します。  </li></ol><h1 id="手順-2-構成基準の作成と展開"><a href="#手順-2-構成基準の作成と展開" class="headerlink" title="手順 2: 構成基準の作成と展開"></a>手順 2: 構成基準の作成と展開</h1><p>作成した構成項目を含む構成基準を作成・展開します。クライアントはこの構成基準を受信して評価することで、準拠状態をサーバーに報告します。  </p><ol><li>[資産とコンプライアンス] - [概要] - [コンプライアンス設定] - [構成基準] を右クリックし、[構成基準の作成] を選択します。  </li><li>任意の名前を指定し、画面中央部にある [構成データ] で [追加] を選択し、[構成項目] を選択します。  </li><li>手順 1 で作成した構成項目を指定して、画面中央部にある [追加] をクリックし、[OK] を選択します。  </li><li>[OK] を選択します。  </li><li>作成した構成基準を右クリックし [展開] を選択します。  </li><li>以下の設定を実施し [OK] を選択します。<br>・「利用可能な構成基準」から作成した構成基準を選択して [追加] をクリックし「選択した構成基準」に表示されていることを確認します。<br>・[サポートされている場合は準拠していない規則を修復する]: オフ<br>・「コレクション」にて展開対象のコレクションを選択します。<br>・「スケジュール」にて、構成基準の評価スケジュールを指定します。（既定では 7 日に 1 回）  </li></ol><p><img src="/blog/mecm/20230309_01/2023-03-09-14-12-52.png"></p><p>※注意：[サポートされている場合は準拠していない規則を修復する] チェックは必ず “オフ” に設定してください。オンにすると、レジストリ値が修復されてしまいます。  </p><h1 id="実行結果の確認方法"><a href="#実行結果の確認方法" class="headerlink" title="実行結果の確認方法"></a>実行結果の確認方法</h1><p>構成基準を展開した後、クライアント側で、コントロール パネルを開き、表示方法を “小さいアイコン” に変更し、[Configuration Manager] を開いて [操作] タブより [コンピューター ポリシーの取得および評価サイクル] を選択し、[直ちに実行] を何度かクリックします。その後 [構成] タブを開き、[最新の情報に更新] をクリックすると、展開した構成基準の名前が表示されます。<br>最初は「コンプライアンスの状態」が「不明」となっていますので [評価] をクリックします。「準拠している」となった場合、この構成基準は「準拠」として、既定で 15 分以内にサーバー側に状態メッセージとして報告されます。  </p><p><img src="/blog/mecm/20230309_01/2023-03-09-14-17-19.png"></p><p>上図のように “準拠している” と判定されている場合、DisableWindowsUpdateAccess が “1” であると判断できます。  </p><h1 id="補足"><a href="#補足" class="headerlink" title="補足"></a>補足</h1><h2 id="構成基準の実行タイミングについて"><a href="#構成基準の実行タイミングについて" class="headerlink" title="構成基準の実行タイミングについて"></a>構成基準の実行タイミングについて</h2><p>構成基準を展開した後は、クライアント側で [コンピューター ポリシーの取得および評価サイクル] が実行されることで、最大 2 時間以内で構成基準がスケジューリングされ実行されます。<br>コンピューター ポリシーの受信サイクルについては、既定で 60 分間隔で実行されています。<br>なお、できる限り早く実行させたい場合は、「クライアント通知」という機能を使用すれば、「コンピューターポリシーの取得および評価サイクル」を直ちに実行するように、サーバー側からクライアントに通知させることができますので、こちらもご利用ください。(デバイス単位でもコレクション単位でも実行可能です。)  </p><p>Title: Configuration Manager でのクライアント通知<br>URL: <a href="https://learn.microsoft.com/ja-jp/mem/configmgr/core/clients/manage/client-notification">https://learn.microsoft.com/ja-jp/mem/configmgr/core/clients/manage/client-notification</a></p><h2 id="“準拠している”-コレクションの作成"><a href="#“準拠している”-コレクションの作成" class="headerlink" title="“準拠している” コレクションの作成"></a>“準拠している” コレクションの作成</h2><p>レジストリ値が存在する端末、すなわち “準拠している” クライアントのみを含むコレクションを作成することも可能です。  </p><p>作成した構成基準の [展開] を右クリックして [新しいコレクションの作成] - [準拠している] を選択します。<br>ウィザードを進めてコレクションを作成することで、今回の構成基準に対して “準拠している” 端末のみを含むコレクションを作成できます。<br>“準拠していない” コレクションも作成可能ですので、用途に応じてお使い分けください。<br><img src="/blog/mecm/20230309_01/2023-03-09-14-21-17.png"></p><h3 id="関連ブログ"><a href="#関連ブログ" class="headerlink" title="関連ブログ"></a>関連ブログ</h3><p>ハードウェア インベントリで特定のレジストリ値を収集したい場合は、こちらのブログをご参照ください。<br><a href="https://jpmem.github.io/blog/mecm/20220722_01/">ハードウェア インベントリで HKLM 配下の特定のレジストリを収集する ～使い方シリーズ～</a>  </p><p>特定のレジストリ値をセットしたい場合は、こちらのブログをご参照ください。<br><a href="https://jpmem.github.io/blog/mecm/20230307_01/">コンプライアンス機能で特定レジストリ値をセットする方法</a>  </p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;みなさま、こんにちは。Configuration Manager サポート チーム 山田 です。  &lt;/p&gt;
&lt;p&gt;本日は Configuration Manager のコンプライアンス機能で特定のレジストリ値の状態をチェックする方法についてご紹介いたします。&lt;br&gt;本手順</summary>
      
    
    
    
    
    <category term="MECM" scheme="https://jpmem.github.io/blog/tags/MECM/"/>
    
    <category term="使い方" scheme="https://jpmem.github.io/blog/tags/%E4%BD%BF%E3%81%84%E6%96%B9/"/>
    
  </entry>
  
  <entry>
    <title>コンプライアンス機能で特定レジストリ値をセットする方法</title>
    <link href="https://jpmem.github.io/blog/mecm/20230307_01/"/>
    <id>https://jpmem.github.io/blog/mecm/20230307_01/</id>
    <published>2023-03-06T15:00:00.000Z</published>
    <updated>2023-07-06T08:40:51.290Z</updated>
    
    <content type="html"><![CDATA[<p>みなさま、こんにちは。Configuration Manager サポート チーム 山田 です。  </p><p>本日は Configuration Manager のコンプライアンス機能で特定のレジストリ値をセットする方法についてご紹介いたします。<br>クライアントに特定のレジストリ値をセットしたいというときに、別途スクリプトを作成して、それをパッケージで展開する必要なくレジストリ値をセットできます。<br>ワークグループのクライアントでドメインのグループ ポリシーが適用できない場合などにも有効ですので、ぜひご活用ください。  </p><p>今回は例として、HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\Windows\WindowsUpdate 配下にある DisableWindowsUpdateAccess というレジストリ値をセットする方法をご紹介します。  </p><h1 id="手順-1-構成項目の作成"><a href="#手順-1-構成項目の作成" class="headerlink" title="手順 1: 構成項目の作成"></a>手順 1: 構成項目の作成</h1><ol><li>[資産とコンプライアンス] - [概要] - [コンプライアンス設定] - [構成項目] を右クリックし、[構成項目の作成] を選択します。  </li><li>[全般] ページにて、任意の名前を指定し、デバイスの指定において [Windows デスクトップおよびサーバー] を選択し [次へ] をクリックします。  </li><li>[サポートされているプラットフォーム] ページにて、任意で対象の Windows バージョンを選択し「次へ」をクリックします。  </li><li>[設定] ページにて、[新規] をクリックします。  </li><li>[全般] タブにて、任意の名前を指定し以下の設定を行います。<br>・設定の種類 ： レジストリ値<br>・データ型 : 整数<br>・ハイブ名：HKEY_LOCAL_MACHINE<br>・キー名：SOFTWARE\Policies\Microsoft\Windows\WindowsUpdate<br>・値の名前：DisableWindowsUpdateAccess  </li></ol><p><img src="/blog/mecm/20230307_01/2023-03-07-12-00-44.png"></p><ol start="6"><li>[コンプライアンス規則] タブにて、[新規] をクリックし以下の設定を行い [OK] を選択します。<br>・名前：任意の名前<br>・規則の種類：値<br>・演算子：次の値と等しい<br>・次の値の場合：1<br>・サポートされている場合は準拠していない規則を修正する : オン<br>・この設定インスタンスが見つからない場合はコンプライアンス違反としてレポートする : オン  </li></ol><p><img src="/blog/mecm/20230307_01/2023-03-07-13-02-36.png"></p><ol start="7"><li>[次へ] を選択していき、構成項目の作成を完了します。  </li></ol><h1 id="手順-2-構成基準の作成と展開"><a href="#手順-2-構成基準の作成と展開" class="headerlink" title="手順 2: 構成基準の作成と展開"></a>手順 2: 構成基準の作成と展開</h1><p>作成した構成項目を含む構成基準を作成・展開します。クライアントはこの構成基準を受信して評価することで、構成項目内の PowerShell スクリプトを実行し、準拠状態をサーバーに報告します。  </p><ol><li>[資産とコンプライアンス] - [概要] - [コンプライアンス設定] - [構成基準] を右クリックし、[構成基準の作成] を選択します。  </li><li>任意の名前を指定し、画面中央部にある [構成データ] で [追加] を選択し、[構成項目] を選択します。  </li><li>手順 1 で作成した構成項目を指定して、画面中央部にある [追加] をクリックし、[OK] を選択します。  </li><li>[OK] を選択します。  </li><li>作成した構成基準を右クリックし [展開] を選択します。  </li><li>以下の設定を実施し [OK] を選択します。<br>・「利用可能な構成基準」から作成した構成基準を選択して [追加] をクリックし「選択した構成基準」に表示されていることを確認します。<br>・[サポートされている場合は準拠していない規則を修復する]: オン<br>・「コレクション」にて展開対象のコレクションを選択します。<br>・「スケジュール」にて、構成基準の評価スケジュールを指定します。（既定では 7 日に 1 回）  </li></ol><p><img src="/blog/mecm/20230307_01/2023-03-07-16-56-07.png"></p><h1 id="実行結果の確認方法"><a href="#実行結果の確認方法" class="headerlink" title="実行結果の確認方法"></a>実行結果の確認方法</h1><p>構成基準を展開した後、クライアント側で、コントロール パネルを開き、表示方法を “小さいアイコン” に変更し、[Configuration Manager] を開いて [操作] タブより [コンピューター ポリシーの取得および評価サイクル] を選択し、[直ちに実行] を何度かクリックします。その後 [構成] タブを開き、[最新の情報に更新] をクリックすると、展開した構成基準の名前が表示されます。<br>最初は「コンプライアンスの状態」が「不明」となっていますので [評価] をクリックします。「準拠している」となった場合、この構成基準は「準拠」として、既定で 15 分以内にサーバー側に状態メッセージとして報告されます。  </p><p><img src="/blog/mecm/20230307_01/2023-03-07-13-09-32.png"></p><p>「準拠している」となったことを確認後、実際にレジストリ値がセットされているかご確認ください。  </p><p>■構成基準適用前<br><img src="/blog/mecm/20230307_01/2023-03-07-13-10-58.png"></p><p>■構成基準適用後<br><img src="/blog/mecm/20230307_01/2023-03-07-13-11-10.png"></p><h1 id="補足"><a href="#補足" class="headerlink" title="補足"></a>補足</h1><h2 id="構成基準の実行タイミングについて"><a href="#構成基準の実行タイミングについて" class="headerlink" title="構成基準の実行タイミングについて"></a>構成基準の実行タイミングについて</h2><p>構成基準を展開した後は、クライアント側で [コンピューター ポリシーの取得および評価サイクル] が実行されることで、最大 2 時間以内で構成基準がスケジューリングされ実行されます。<br>コンピューター ポリシーの受信サイクルについては、既定で 60 分間隔で実行されています。<br>なお、できる限り早く実行させたい場合は、「クライアント通知」という機能を使用すれば、「コンピューターポリシーの取得および評価サイクル」を直ちに実行するように、サーバー側からクライアントに通知させることができますので、こちらもご利用ください。(デバイス単位でもコレクション単位でも実行可能です。)  </p><p>Title: Configuration Manager でのクライアント通知<br>URL: <a href="https://learn.microsoft.com/ja-jp/mem/configmgr/core/clients/manage/client-notification">https://learn.microsoft.com/ja-jp/mem/configmgr/core/clients/manage/client-notification</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;みなさま、こんにちは。Configuration Manager サポート チーム 山田 です。  &lt;/p&gt;
&lt;p&gt;本日は Configuration Manager のコンプライアンス機能で特定のレジストリ値をセットする方法についてご紹介いたします。&lt;br&gt;クライアントに</summary>
      
    
    
    
    
    <category term="MECM" scheme="https://jpmem.github.io/blog/tags/MECM/"/>
    
    <category term="使い方" scheme="https://jpmem.github.io/blog/tags/%E4%BD%BF%E3%81%84%E6%96%B9/"/>
    
  </entry>
  
  <entry>
    <title>ハードウェア インベントリで特定の WMI クラスを収集する ～使い方シリーズ～</title>
    <link href="https://jpmem.github.io/blog/mecm/20230306_01/"/>
    <id>https://jpmem.github.io/blog/mecm/20230306_01/</id>
    <published>2023-03-05T15:00:00.000Z</published>
    <updated>2023-07-06T08:40:51.286Z</updated>
    
    <content type="html"><![CDATA[<p>みなさま、こんにちは。Configuration Manager サポート チームです。  </p><p>使い方シリーズ、今回はハードウェア インベントリで特定の WMI クラスを収集する方法についてご案内いたします。<br>特定の WMI クラスを収集して、Configuration Manager コンソールで確認したいという場合に本手順をお役立ていただけますと幸いです。  </p><h1 id="想定シナリオ"><a href="#想定シナリオ" class="headerlink" title="想定シナリオ"></a>想定シナリオ</h1><p>今回、収集対象とする WMI クラスは、名前空間 root\cimv2 に存在する Win32_InstalledStoreProgram というクラスです。  </p><h1 id="手順"><a href="#手順" class="headerlink" title="手順"></a>手順</h1><p>以下の手順をご実施ください。  </p><ol><li><p>Configuration Manager 管理コンソールを開きます。  </p></li><li><p>[管理] &gt; [概要] &gt; [クライアント設定] &gt; [既定の設定] を右クリック &gt; プロパティを開きます。  </p></li><li><p>ハードウェア インベントリ を選択 &gt; ハードウェア インベントリ クラス の [クラスの設定] を選択します。  </p></li><li><p>表示されたハードウェア インベントリ クラス ウィザードにて、[追加] を選択します。  </p></li><li><p>名前空間: にて [接続] を選択します。  </p></li><li><p>接続を行いたいコンピューター名と WMI 名前空間を指定します。<br>参照したい WMI 名前空間がローカル コンピューターに存在しない場合には、リモートのコンピューターを指定することも可能です。  </p><p>今回は以下のように指定します。  </p><p>コンピューター名：ローカル コンピューター名（既定値のまま）<br>WMI 名前空間　　：root\cimv2<br>繰り返し　　　　：チェック  </p><p> 上記入力後、[接続] をクリックします。  </p></li><li><p>[インベントリ クラス] のフィルターに Installed と入力し、”Installed Store Program” にチェックを入れ、収集対象としたい項目にチェックを入れ、[OK] で閉じます。<br><img src="/blog/mecm/20230306_01/2023-03-07-17-40-23.png"></p></li></ol><h2 id="確認方法"><a href="#確認方法" class="headerlink" title="確認方法"></a>確認方法</h2><p>実際に対象の情報が収集されているか確認します。  </p><p>まずクライアントは、ポリシーを受けとることで上記で設定したクラスをハードウェア インベントリで収集するようになります。<br>その後、ハードウェア インベントリのサイクルが実行されると、収集対象としたクラスの情報を管理ポイントへ送信し、サイト サーバーに情報が送られ、Configuration Manager のデータベースに書き込まれることで Configuration Manager コンソールで確認できるようになります。  </p><p>そのため、クライアント端末で以下のサイクルを順番に実施します。<br>反映されたポリシーを受信するまでに時間がかかる場合がありますので、テストの際は以下のサイクルを何度か実行ください。  </p><ul><li>[コンピューターポリシーの取得および評価サイクル]  </li><li>[ハードウェア インベントリ サイクル]  </li></ul><p><img src="/blog/mecm/20230306_01/2023-03-07-17-40-53.png"></p><p>ハードウェア インベントリが正常に収集されると、Configuration Manager コンソールからクライアントを右クリックして、リソース エクスプローラを起動することで、収集したレジストリ情報をご確認いただけます。  </p><p><img src="/blog/mecm/20230306_01/2023-03-07-17-41-17.png"></p><p>また、データベースに対して SQL クエリを実行することでもご確認いただけます。<br>今回例の場合は以下のクエリを実行します。  </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select * from v_GS_INSTALLED_STORE_PROGRAM</span><br></pre></td></tr></table></figure><p>SQL の実行方法については、以下の記事をご参照ください。  </p><p>Title: SQL Query 結果の出力方法について<br>URL: <a href="https://jpmem.github.io/memlog/configmgr/sql/sqlquery.html">https://jpmem.github.io/memlog/configmgr/sql/sqlquery.html</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;みなさま、こんにちは。Configuration Manager サポート チームです。  &lt;/p&gt;
&lt;p&gt;使い方シリーズ、今回はハードウェア インベントリで特定の WMI クラスを収集する方法についてご案内いたします。&lt;br&gt;特定の WMI クラスを収集して、Config</summary>
      
    
    
    
    
    <category term="MECM" scheme="https://jpmem.github.io/blog/tags/MECM/"/>
    
    <category term="使い方" scheme="https://jpmem.github.io/blog/tags/%E4%BD%BF%E3%81%84%E6%96%B9/"/>
    
  </entry>
  
  <entry>
    <title>Configuration Manager で PowerShell スクリプトを配布する</title>
    <link href="https://jpmem.github.io/blog/mecm/20230303_01/"/>
    <id>https://jpmem.github.io/blog/mecm/20230303_01/</id>
    <published>2023-03-02T15:00:00.000Z</published>
    <updated>2023-07-06T08:40:51.286Z</updated>
    
    <content type="html"><![CDATA[<p>みなさま、こんにちは。Configuration Manager サポート チームです。</p><p>本日は Configuration Manager で PowerShell スクリプトを配布する手順についてご紹介いたします。<br>PowerShell スクリプトは、<a href="https://jpmem.github.io/blog/mecm/20211025_01/">こちらの記事</a>で紹介したスクリプト機能でも配布可能ですが、繰り返し実行することを想定してパッケージ機能で配布する手順をご紹介します。<br>定期的なメンテナンスを行うスクリプトや、NOIDMIF ファイルを定期的に作成してカスタム インベントリを収集する場合にも使用できますので、ご活用ください。</p><h1 id="事前準備"><a href="#事前準備" class="headerlink" title="事前準備"></a>事前準備</h1><p>配布したい PowerShell スクリプト ファイルを作成します。名前は、sample.ps1 などの任意の名前にします。  </p><h1 id="パッケージの作成手順"><a href="#パッケージの作成手順" class="headerlink" title="パッケージの作成手順"></a>パッケージの作成手順</h1><ol><li>管理コンソールを起動し [ソフトウェア ライブラリ] - [概要] - [アプリケーション管理] - [パッケージ] を開きます。  </li><li>[パッケージ] を右クリックし、[パッケージの作成] をクリックします。  </li><li>[パッケージとプログラムの作成ウィザード] が表示されますので、[名前] に任意の名前を入力し、[このパッケージにソース ファイルを含める] にチェックを入れます。  </li><li>[ソース フォルダー] の参照ボタンをクリックし、事前準備で用意したスクリプト ファイルの格納場所 (\<SERVER>\Share\PowerShell など) を指定します。  </li><li>次のページで、[標準プログラム] を指定します。  </li><li>次のページで、[名前] に任意の名前を指定し、ログオン状態に関わらずスクリプトを実行するために次のように指定します。<br>・コマンドライン<br><code>&quot;%Windir%\sysnative\WindowsPowerShell\v1.0\powershell.exe&quot; -ExecutionPolicy Bypass -NoLogo -NonInteractive -NoProfile -WindowStyle Hidden -File sample.ps1</code><br>(※) -File パラメータには、スクリプト ファイル名を指定してください<br>・プログラムの実行条件<br>ユーザーのログオン状態に関係なし<br>・実行モード<br>管理者権限で実行する  </li><li>その他の設定項目は、既定のまま、パッケージの作成を完了します。  </li></ol><h1 id="パッケージの展開手順"><a href="#パッケージの展開手順" class="headerlink" title="パッケージの展開手順"></a>パッケージの展開手順</h1><ol><li>作成されたパッケージを右クリックし、[展開] をクリックします。  </li><li>ソフトウェアの展開ウィザードが開きます。[参照] をクリックし、配布先のコレクションを指定して [次へ] をクリックします。  </li><li>[コンテンツ] ページにおいて、[追加] をクリックし配布ポイントを選択し、[次へ] をクリックします。  </li><li>[展開設定] ページにおいて、目的を [必須] にし [次へ] をクリックします。<br>※ 必須とすることで、ユーザー操作が必要なく、インストールが完了します。  </li><li>[展開スケジュール] ページからスケジュールを以下のように設定し、[次へ] をクリックします。<br>・割り当てスケジュールの [新規] をクリックし、[次のイベントの直後に割り当てる] &gt; [直ちに] をクリックして、[OK] をクリックします。<br>・再実行の動作を [プログラムを常に再実行する] を選択します。<br>※スクリプト ファイルを 1 回だけではなく繰り返し実行させておきたい場合は、割り当てスケジュールの [新規] をクリックし、[次のスケジュールに割り当てる] &gt; [スケジュール] をクリック、[間隔指定] より、例えば 「3 時間」と指定して [OK] をクリックします。  </li><li>[ユーザー側の表示と操作] において、通知設定を設定し [次へ] をクリックします。通知させたくない場合は、[割り当てられたプログラムの個別の実行をユーザーに許可する] をオフにします。  </li><li>[配布ポイント] ページにおいて、展開設定を設定し [次へ] をクリックします。(他のパッケージの展開設定と合わせて頂くとよいかと存じます。)  </li><li>以降のページを進み、ソフトウェアの展開ウィザードが正常に完了することを確認します。  </li></ol><p>上記の手順を実施いただくことで、クライアントへの展開は完了します。  </p><p>上記以外の設定項目につきましては、ご要件に応じて適宜変更をいただけます。各項目のご説明については、次の公開情報をご確認ください。<br>　<br>Title: パッケージとプログラムを作成する<br>URL: <a href="https://learn.microsoft.com/ja-jp/mem/configmgr/apps/deploy-use/packages-and-programs#create-a-package-and-program">https://learn.microsoft.com/ja-jp/mem/configmgr/apps/deploy-use/packages-and-programs#create-a-package-and-program</a></p><p>Title: パッケージとプログラムをデプロイする<br>URL: <a href="https://learn.microsoft.com/ja-jp/mem/configmgr/apps/deploy-use/packages-and-programs#deploy-packages-and-programs">https://learn.microsoft.com/ja-jp/mem/configmgr/apps/deploy-use/packages-and-programs#deploy-packages-and-programs</a></p><h1 id="実行結果の確認方法"><a href="#実行結果の確認方法" class="headerlink" title="実行結果の確認方法"></a>実行結果の確認方法</h1><p>パッケージ機能で配布した場合、スクリプトのリターン コードが 0 か 3010 以外であれば、「失敗」判定されます。<br>そのため、スクリプトの実行に失敗した端末は、「監視」の「展開ステータス」にて、対象パッケージの展開ステータスを把握し、失敗のステータスに分類されますので、そちらでご確認ください。  </p><h1 id="補足"><a href="#補足" class="headerlink" title="補足"></a>補足</h1><h2 id="パッケージの配布を停止したい場合"><a href="#パッケージの配布を停止したい場合" class="headerlink" title="パッケージの配布を停止したい場合"></a>パッケージの配布を停止したい場合</h2><p>作成したパッケージの配布を停止する場合、管理コンソールより、[ソフトウェア ライブラリ] - [概要] - [アプリケーション管理] - [パッケージ] を開きます。<br>プログラムを選択し、下ペインより [プログラム] に移動します。下ペインより、プログラム名を右クリック &gt; 無効 をクリックします。ポップアップが表示されるので [はい] をクリックします。<br>再度、クライアント上でスクリプトを実行する場合は、プログラムを [有効] とします。  </p><h2 id="展開してから実行されるまでの流れについて"><a href="#展開してから実行されるまでの流れについて" class="headerlink" title="展開してから実行されるまでの流れについて"></a>展開してから実行されるまでの流れについて</h2><p>パッケージを展開した後は、クライアント側で [コンピューター ポリシーの取得および評価サイクル] が実行されることで、スクリプトのダウンロードと実行が行われます。こちらは既定で 60 ～ 120 分間隔で実行されています。<br>なお、できる限り早く実行させたい場合は、「クライアント通知」という機能を使用すれば、「コンピューターポリシーの取得および評価サイクル」を直ちに実行するように、サーバー側からクライアントに通知させることができますので、こちらもご利用ください。(デバイス単位でもコレクション単位でも実行可能です。)    </p><p>Title: Configuration Manager でのクライアント通知<br>URL: <a href="https://learn.microsoft.com/ja-jp/mem/configmgr/core/clients/manage/client-notification">https://learn.microsoft.com/ja-jp/mem/configmgr/core/clients/manage/client-notification</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;みなさま、こんにちは。Configuration Manager サポート チームです。&lt;/p&gt;
&lt;p&gt;本日は Configuration Manager で PowerShell スクリプトを配布する手順についてご紹介いたします。&lt;br&gt;PowerShell スクリプトは</summary>
      
    
    
    
    
    <category term="MECM" scheme="https://jpmem.github.io/blog/tags/MECM/"/>
    
    <category term="使い方" scheme="https://jpmem.github.io/blog/tags/%E4%BD%BF%E3%81%84%E6%96%B9/"/>
    
  </entry>
  
  <entry>
    <title>コンプライアンス機能で PowerShell スクリプトを使用して準拠状態をチェックする方法</title>
    <link href="https://jpmem.github.io/blog/mecm/20230303_02/"/>
    <id>https://jpmem.github.io/blog/mecm/20230303_02/</id>
    <published>2023-03-02T15:00:00.000Z</published>
    <updated>2023-07-06T08:40:51.286Z</updated>
    
    <content type="html"><![CDATA[<p>みなさま、こんにちは。Configuration Manager サポート チームです。</p><p>本日は Configuration Manager で コンプライアンス機能で PowerShell スクリプトを使用して準拠状態をチェックする方法についてご紹介いたします。<br>あまり知られていないコンプライアンス機能ですが、この機能はクライアントにとって「あるべき状態」を設定し、その状態になっているかどうかをチェックして「準拠」か「非準拠」を判断したいときに有用です。<br>例えば、特定のグループ ポリシーが適用されているか判断したいときに、レジストリ値をチェックする構成項目・構成基準を作成して展開すれば、グループ ポリシーの適用可否をチェックできるといったことです。</p><p>今回は、レジストリ値でチェックできないが、PowerShell スクリプトの結果をもって「準拠」「非準拠」を判断したい場合の設定例をご紹介します。<br>設定例では Microsoft Defender の「リアルタイム保護」の有効・無効をチェックし、有効なら「準拠」、無効なら「非準拠」として報告させることを目的としています。<br><img src="/blog/mecm/20230303_02/01.png"><br>こちらの値は PowerShell コマンド Get-MpComputerStatus で得られた結果の RealTimeProtectionEnabled というプロパティで判定できるので、そちらの結果を使用する PowerShell スクリプトとなります。<br><img src="/blog/mecm/20230303_02/02.png">  </p><p>PowerShell スクリプトを変更すれば、様々なコマンドに応用できると思いますので、是非本手順をご活用ください！</p><h1 id="事前準備"><a href="#事前準備" class="headerlink" title="事前準備"></a>事前準備</h1><p>既定ではクライアントの PowerShell 実行ポリシーが “すべて署名済み” ですので、コンプライアンス機能で展開する PowerShell スクリプトが実行できません。<br>そのため、既定の状態で構成基準を展開すると、エラーになる可能性があるので、クライアントに展開しているクライアント設定で以下の手順で “バイパス” に変更してください。  </p><ol><li>管理コンソールを起動し、[管理] - [クライアント設定] を開きます。</li><li>クライアントに展開しているクライアント設定を右クリックしてプロパティを開きます。</li><li>[コンピューター エージェント] - [PowerShell 実行ポリシー] をバイパスに設定します。</li></ol><p>クライアントに展開されたクライアント設定の結果の確認方法は、<a href="https://jpmem.github.io/blog/mecm/20220408_01/">こちらの記事</a>をご確認ください。</p><h1 id="手順-1-構成項目の作成"><a href="#手順-1-構成項目の作成" class="headerlink" title="手順 1: 構成項目の作成"></a>手順 1: 構成項目の作成</h1><ol><li>管理コンソールを起動し [資産とコンプライアンス] - [コンプライアンス設定] - [構成項目] を右クリックし、[構成項目の作成] をクリックします。</li><li>[全般] ページにて、任意の名前を指定し、デバイスの指定において [Windows デスクトップおよびサーバー] を選択し [次へ] をクリックします。</li><li>[サポートされているプラットフォーム] ページにて、任意で対象の Windows バージョンを選択し「次へ」をクリックします。</li><li>[設定] ページにて、[新規] をクリックします。</li><li>[全般] タブにて、任意の名前を指定し以下の設定を行った後、[探索スクリプト] - [スクリプトの追加] を選択します。<br>・設定の種類 ： スクリプト<br>・データ型 : ブール値</li><li>[スクリプト言語] に [Windows PowerShell] を選択して、以下のような PowerShell スクリプトを入力し、[OK] を選択し [次へ] をクリックします。<br>スクリプトで $True を返した場合「準拠」、$False を返した場合「非準拠」とするようにします。  <figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$mdInfo</span> = <span class="built_in">Get-MpComputerStatus</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$mdInfo</span>.RealTimeProtectionEnabled <span class="operator">-eq</span> <span class="variable">$True</span>) &#123;</span><br><span class="line">    <span class="built_in">Write-Output</span> <span class="variable">$True</span></span><br><span class="line">&#125; <span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="built_in">Write-Output</span> <span class="variable">$False</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li>[コンプライアンス規則] タブにて、[新規] をクリックし任意の名前を指定し、[参照] を選択します。</li><li>項番 5. 6. で作成した構成項目名を選択し、[選択] をクリックします。</li><li> 以下の設定を行い [OK] をクリックします。<br>・規則の種類：値<br>・演算子：次の値と等しい<br>・次の値の場合： True<br>・この設定インスタンスが見つからない場合はコンプライアンス違反としてレポートする : オン  </li><li>[次へ] をクリックしていき、構成項目の作成を完了します。</li></ol><h1 id="手順-2-構成基準の作成と展開"><a href="#手順-2-構成基準の作成と展開" class="headerlink" title="手順 2: 構成基準の作成と展開"></a>手順 2: 構成基準の作成と展開</h1><p>作成した構成項目を含む構成基準を作成・展開します。クライアントはこの構成基準を受信して評価することで、構成項目内の PowerShell スクリプトを実行し、準拠状態をサーバーに報告します。</p><ol><li>[資産とコンプライアンス] - [概要] - [コンプライアンス設定] - [構成基準] を右クリックし、[構成基準の作成] をクリックします。</li><li>任意の名前を指定し、画面中央部にある [構成データ] で [追加] をクリックし、[構成項目] をクリックします。</li><li>作成した構成項目を指定して、画面中央部にある [追加] をクリックし、[OK] をクリックします。  </li><li>[OK] をクリックします。  </li><li>作成した構成基準を右クリックし [展開] をクリックします。</li><li>以下の設定を実施し「OK」をクリックします。<br>・「選択した構成基準」に作成した構成基準が表示されていることを確認します。表示されていない場合は「利用可能な構成基準」から作成した構成基準を選択して [追加] をクリックします。<br>・「コレクション」にて、展開対象のコレクションを選択します。<br>・「スケジュール」にて、構成基準の評価スケジュールを指定します。（既定では 7 日に 1 回）</li></ol><h1 id="実行結果の確認方法"><a href="#実行結果の確認方法" class="headerlink" title="実行結果の確認方法"></a>実行結果の確認方法</h1><p>構成基準を展開した後、クライアント側で、コントロール パネルを開き、表示方法を “小さいアイコン” に変更し、[Configuration Manager] を開いて [操作] タブより [コンピューター ポリシーの取得および評価サイクル] を選択し、[直ちに実行] を何度かクリックします。その後 [構成] タブを開き、[最新の情報に更新] をクリックすると、展開した構成基準の名前が表示されます。<br>最初は「コンプライアンスの状態」が「不明」となっていますので [評価] をクリックします。「準拠している」となった場合、この構成基準は「準拠」として、既定で 15 分以内にサーバー側に状態メッセージとして報告されます。  </p><p><img src="/blog/mecm/20230303_02/03.png">  </p><p>「エラー」となった場合は [レポートの表示] をクリックしてレポートを確認してください。「スクリプトに署名がありません」と表示された場合、PowerShell スクリプトの実行が許可されていませんので、事前準備のクライアント設定が展開されているか改めてご確認ください。</p><h1 id="補足"><a href="#補足" class="headerlink" title="補足"></a>補足</h1><h2 id="構成基準の実行タイミングについて"><a href="#構成基準の実行タイミングについて" class="headerlink" title="構成基準の実行タイミングについて"></a>構成基準の実行タイミングについて</h2><p>構成基準を展開した後は、クライアント側で [コンピューター ポリシーの取得および評価サイクル] が実行されることで、最大 2 時間以内で構成基準がスケジューリングされ実行されます。<br>コンピューター ポリシーの受信サイクルについては、既定で 60 分間隔で実行されています。<br>なお、できる限り早く実行させたい場合は、「クライアント通知」という機能を使用すれば、「コンピューターポリシーの取得および評価サイクル」を直ちに実行するように、サーバー側からクライアントに通知させることができますので、こちらもご利用ください。(デバイス単位でもコレクション単位でも実行可能です。)    </p><p>Title: Configuration Manager でのクライアント通知<br>URL: <a href="https://learn.microsoft.com/ja-jp/mem/configmgr/core/clients/manage/client-notification">https://learn.microsoft.com/ja-jp/mem/configmgr/core/clients/manage/client-notification</a></p><h2 id="「準拠している」端末のみを含むコレクションを作成する方法"><a href="#「準拠している」端末のみを含むコレクションを作成する方法" class="headerlink" title="「準拠している」端末のみを含むコレクションを作成する方法"></a>「準拠している」端末のみを含むコレクションを作成する方法</h2><p>構成基準に「準拠している」端末のみを含むコレクションを作成することも可能です。<br>作成した構成基準の「展開」を右クリックして「新しいコレクションの作成」-「準拠している」をクリックします。  </p><p><img src="/blog/mecm/20230303_02/04.png">  </p><p>ウィザードを進めてコレクションを作成することで、今回の構成基準に対して「準拠している」端末のみを含むコレクションを作成できます。<br>「準拠していない」を選択すれば、同様に「準拠していない」端末のみを含むコレクションを作成することも可能ですので、「準拠していない」端末をリストアップする際に有用です。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;みなさま、こんにちは。Configuration Manager サポート チームです。&lt;/p&gt;
&lt;p&gt;本日は Configuration Manager で コンプライアンス機能で PowerShell スクリプトを使用して準拠状態をチェックする方法についてご紹介いたしま</summary>
      
    
    
    
    
    <category term="MECM" scheme="https://jpmem.github.io/blog/tags/MECM/"/>
    
    <category term="使い方" scheme="https://jpmem.github.io/blog/tags/%E4%BD%BF%E3%81%84%E6%96%B9/"/>
    
  </entry>
  
  <entry>
    <title>期限が切れた更新プログラムについて</title>
    <link href="https://jpmem.github.io/blog/wsus/2023-03-01_01/"/>
    <id>https://jpmem.github.io/blog/wsus/2023-03-01_01/</id>
    <published>2023-02-28T15:00:00.000Z</published>
    <updated>2023-07-06T08:40:51.418Z</updated>
    
    <content type="html"><![CDATA[<p>みなさま、こんにちは。WSUS サポート チームです。</p><p>今回は、弊社で期限が切れの扱いとした更新プログラムについて、WSUS 上ではどのような動きとなるかご紹介いたします。<br>是非ご一読いただき、WSUS の動作の理解にお役立てください。</p><h1 id="期限が切れた更新プログラムとは"><a href="#期限が切れた更新プログラムとは" class="headerlink" title="期限が切れた更新プログラムとは"></a>期限が切れた更新プログラムとは</h1><p>弊社開発側で公開を停止した更新プログラムです。期限切れの更新プログラムは、更新プログラムのメタデータの情報に期限切れの内容が加えられ新たな改訂版となります。</p><h1 id="WSUSはいつ期限切れ情報を受け取るか"><a href="#WSUSはいつ期限切れ情報を受け取るか" class="headerlink" title="WSUSはいつ期限切れ情報を受け取るか"></a>WSUSはいつ期限切れ情報を受け取るか</h1><p>更新プログラムのメタデータの内容が変更された場合、その改訂版の情報は WSUS の 同期処理の際に受け取る動作となります。<br>更新プログラムの改訂版については<a href="https://jpmem.github.io/blog/wsus/2023-03-01_01/">こちらの記事</a>をご参照ください。<br>なお、既に期限切れとなった更新プログラムについては、これまで同期されていなかった場合、新たにWSUS に着信することはありません。<br><img src="/blog/wsus/2023-03-01_01/2023-03-01_01-1.png"></p><h1 id="期限切れの更新プログラムに対する-WSUS-のふるまい"><a href="#期限切れの更新プログラムに対する-WSUS-のふるまい" class="headerlink" title="期限切れの更新プログラムに対する WSUS のふるまい"></a>期限切れの更新プログラムに対する WSUS のふるまい</h1><p>期限切れの更新プログラムに対して WSUS 上で承認作業を実施した場合には処理が失敗します。<br><img src="/blog/wsus/2023-03-01_01/2023-03-01_01-2.png"></p><p>また、WSUS の既定の動作では、新しい改訂版により期限切れとなった更新プログラムを自動的に拒否済みへ変更する機能が有効化されています。　　<br><img src="/blog/wsus/2023-03-01_01/2023-03-01_01-3.png"></p><h1 id="期限切れの更新プログラムは承認できるの？"><a href="#期限切れの更新プログラムは承認できるの？" class="headerlink" title="期限切れの更新プログラムは承認できるの？"></a>期限切れの更新プログラムは承認できるの？</h1><p>期限切れの更新プログラムは新たなリビジョンとして着信します。上述の通り、期限切れのリビジョンに対しては承認ができなくなりますが、過去のリビジョンを承認することができます。ただし、基本的には弊社が公開停止した更新プログラムであるため、置き換えられた新しい更新プログラムを適用することをご検討ください。<br>更新プログラムを右クリック &gt; [リビジョン履歴] &gt; 過去のリビジョンを右クリック &gt; [承認]<br><img src="/blog/wsus/2023-03-01_01/2023-03-01_01-4.png">  </p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;みなさま、こんにちは。WSUS サポート チームです。&lt;/p&gt;
&lt;p&gt;今回は、弊社で期限が切れの扱いとした更新プログラムについて、WSUS 上ではどのような動きとなるかご紹介いたします。&lt;br&gt;是非ご一読いただき、WSUS の動作の理解にお役立てください。&lt;/p&gt;
&lt;h1 </summary>
      
    
    
    
    
    <category term="WSUS" scheme="https://jpmem.github.io/blog/tags/WSUS/"/>
    
  </entry>
  
  <entry>
    <title>WSUS のトラブルシューティングに役立つリンク集</title>
    <link href="https://jpmem.github.io/blog/wsus/2023-02-28_01/"/>
    <id>https://jpmem.github.io/blog/wsus/2023-02-28_01/</id>
    <published>2023-02-27T15:00:00.000Z</published>
    <updated>2023-07-06T08:40:51.418Z</updated>
    
    <content type="html"><![CDATA[<p>皆さま こんにちは。 Configuration Manager サポートチームです。<br>こちらは WSUS のトラブルシューティングに役立つリンク集です。<br>WSUS を利用中にお困りの際、ぜひお役立てください！</p><h3 id="更新プログラムのダウンロード時の失敗"><a href="#更新プログラムのダウンロード時の失敗" class="headerlink" title="更新プログラムのダウンロード時の失敗"></a>更新プログラムのダウンロード時の失敗</h3><p>こちらは WSUS サーバーで、更新プログラムをダウンロードする時に失敗する際に参考になるブログです。<br>対処方法をご紹介しておりますので、詳しくはブログをご参考にしてくださいませ。  </p><p>Title: WSUS サーバーで、一部のダウンロードが失敗する ( File cert verification failure )<br>URL: <a href="https://jpmem.github.io/blog/wsus/2013-02-18_01/">https://jpmem.github.io/blog/wsus/2013-02-18_01/</a>  </p><p>Title: Windows 10 および Windows Server 2016 の環境で、更新プログラムのダウンロードが途中から進まなくなる問題について<br>URL: <a href="https://jpmem.github.io/blog/wsus/2016-10-28_01/">https://jpmem.github.io/blog/wsus/2016-10-28_01/</a>  </p><p>Title: WSUS サーバーのダウンロード障害について – BITS と Range ヘッダー<br>URL: <a href="https://jpmem.github.io/blog/wsus/2022-06-30_01/">https://jpmem.github.io/blog/wsus/2022-06-30_01/</a>  </p><p>Title: Windows Server 2016 以降の WSUS で更新プログラムのダウンロードが 0% で進まない場合のチェックポイント<br>URL: <a href="https://jpmem.github.io/blog/wsus/2021-03-18_01/">https://jpmem.github.io/blog/wsus/2021-03-18_01/</a>  </p><p>Title: クライアントの更新プログラムのダウンロードが 0 %で進まない場合のチェックポイント ( WSUS )<br>URL: <a href="https://jpmem.github.io/blog/wsus/2022-03-25_01/">https://jpmem.github.io/blog/wsus/2022-03-25_01/</a>  </p><h3 id="更新プログラムの承認・拒否・インポート・インストール時の失敗"><a href="#更新プログラムの承認・拒否・インポート・インストール時の失敗" class="headerlink" title="更新プログラムの承認・拒否・インポート・インストール時の失敗"></a>更新プログラムの承認・拒否・インポート・インストール時の失敗</h3><p>こちらは WSUS サーバーで、更新プログラムを承認・拒否・インポート・インストールする時に失敗する際に参考になるブログです。<br>対処方法をご紹介しておりますので、詳しくはブログをご参考にしてくださいませ。  </p><p>Title: WSUS で予期しない更新プログラムを展開してしまったときの対応方法<br>URL: <a href="https://jpmem.github.io/blog/wsus/2016-10-07_01/">https://jpmem.github.io/blog/wsus/2016-10-07_01/</a>  </p><p>Title: WSUS 自動承認規則が反映されない事象について<br>URL: <a href="https://jpmem.github.io/blog/wsus/2014-09-08_01/">https://jpmem.github.io/blog/wsus/2014-09-08_01/</a>  </p><p>Title: Windows Server 2016 の WSUS で更新プログラムのインポート時に互換性の問題が発生する事象<br>URL: <a href="https://jpmem.github.io/blog/wsus/2018-04-11_01/">https://jpmem.github.io/blog/wsus/2018-04-11_01/</a>  </p><p>Title: Microsoft Update カタログから更新プログラムの手動インポートに失敗する事象について<br>URL: <a href="https://jpmem.github.io/blog/wsus/2020-08-24_01/">https://jpmem.github.io/blog/wsus/2020-08-24_01/</a>  </p><p>Title: WSUS 上に配信が必要な更新プログラムが同期されてこない！と思ったら<br>URL: <a href="https://jpmem.github.io/blog/wsus/2018-07-12_01/">https://jpmem.github.io/blog/wsus/2018-07-12_01/</a>  </p><p>Title: レプリカ WSUS サーバーの同期がタイムアウトで失敗する<br>URL: <a href="https://jpmem.github.io/blog/wsus/2019-04-09_01/">https://jpmem.github.io/blog/wsus/2019-04-09_01/</a>  </p><p>Title: 「3 – 自動ダウンロードとインストールを通知」 を選択していても、機能更新プログラムが自動インストールされてしまう問題<br>URL: <a href="https://jpmem.github.io/blog/wsus/2019-07-29_01/">https://jpmem.github.io/blog/wsus/2019-07-29_01/</a>  </p><p>Title: 「削除の承認」が Windows 10 2004 以降 / Windows 11 のクライアントに反映されない事象について<br>URL: <a href="https://jpmem.github.io/blog/wsus/2022-06-08_01/">https://jpmem.github.io/blog/wsus/2022-06-08_01/</a>  </p><h3 id="WSUS-のインストール時の失敗"><a href="#WSUS-のインストール時の失敗" class="headerlink" title="WSUS のインストール時の失敗"></a>WSUS のインストール時の失敗</h3><p>こちらは WSUS サーバーをする時に失敗する際に参考になるブログです。<br>対処方法をご紹介しておりますので、詳しくはブログをご参考にしてくださいませ。  </p><p>Title: Windows Server 2012 にて WSUS のインストールに失敗する事象について<br>URL: <a href="https://jpmem.github.io/blog/wsus/2014-04-02_02/">https://jpmem.github.io/blog/wsus/2014-04-02_02/</a>  </p><h3 id="WSUS-の運用時の失敗"><a href="#WSUS-の運用時の失敗" class="headerlink" title="WSUS の運用時の失敗"></a>WSUS の運用時の失敗</h3><p>こちらは WSUS サーバーを運用する時に失敗する際（接続、負荷など）に参考になるブログです。<br>対処方法をご紹介しておりますので、詳しくはブログをご参考にしてくださいませ。  </p><p>Title: クリーンアップ ウィザードにより IIS のプロセスがクラッシュする<br>URL: <a href="https://jpmem.github.io/blog/wsus/2015-06-03_01/">https://jpmem.github.io/blog/wsus/2015-06-03_01/</a>  </p><p>Title: WSUS クリーンアップ ウィザードにてタイムアウトが発生する<br>URL: <a href="https://jpmem.github.io/blog/wsus/2018-02-05_01/">https://jpmem.github.io/blog/wsus/2018-02-05_01/</a>  </p><p>Title: 稀に WsusService.exe が意図せず停止する事象について<br>URL: <a href="https://jpmem.github.io/blog/wsus/2018-10-22_01/">https://jpmem.github.io/blog/wsus/2018-10-22_01/</a>  </p><p>Title: Windows 10 / Windows Server 2016 を管理している環境で WSUS サーバーの負荷が高騰する<br>URL: <a href="https://jpmem.github.io/blog/wsus/2019_04-04_01/">https://jpmem.github.io/blog/wsus/2019_04-04_01/</a>  </p><p>Title: SUSDB.mdf が肥大化したときの対処方法について<br>URL: <a href="https://jpmem.github.io/blog/wsus/2020-03-27_01/">https://jpmem.github.io/blog/wsus/2020-03-27_01/</a>  </p><p>Title: WSUS (Windows Server 2012/Windows Server 2012 R2) の同期処理が失敗する事象について<br>URL: <a href="https://jpmem.github.io/blog/wsus/2020-07-28_01/">https://jpmem.github.io/blog/wsus/2020-07-28_01/</a>  </p><p>Title: Windows Server 2012 / 2012 R2 の WSUS へロールアップ を適用するとクライアントからの接続が失敗する事象について<br>URL: <a href="https://jpmem.github.io/blog/mecm/20200729_01/">https://jpmem.github.io/blog/mecm/20200729_01/</a>  </p><p>Title: WSUS でクライアントが正常に認識されない SusClientID の重複とは<br>URL: <a href="https://jpmem.github.io/blog/wsus/2022-05-18_01/">https://jpmem.github.io/blog/wsus/2022-05-18_01/</a>  </p><h3 id="WSUS-のコンソールに関する失敗"><a href="#WSUS-のコンソールに関する失敗" class="headerlink" title="WSUS のコンソールに関する失敗"></a>WSUS のコンソールに関する失敗</h3><p>こちらは WSUS コンソールに関する失敗に参考になるブログです。<br>対処方法をご紹介しておりますので、詳しくはブログをご参考にしてくださいませ。  </p><p>Title: 「WSUS 管理コンソールにつながらない！」を解消するための 7 つのワザ<br>URL: <a href="https://jpmem.github.io/blog/wsus/2019-03-28_01/">https://jpmem.github.io/blog/wsus/2019-03-28_01/</a>  </p><p>Title: WSUS コンソールが全く開かなくなってしまった！ WsusPool の停止とは<br>URL: <a href="https://jpmem.github.io/blog/wsus/2022-05-23_01/">https://jpmem.github.io/blog/wsus/2022-05-23_01/</a>  </p><p>Title: Window Server 2022 にて WSUS コンソールの言語表示が日本語にならない<br>URL: <a href="https://jpmem.github.io/blog/wsus/2022-10-07_01/">https://jpmem.github.io/blog/wsus/2022-10-07_01/</a>  </p><h3 id="その他"><a href="#その他" class="headerlink" title="その他"></a>その他</h3><p>こちらは ReportingEvents.log の見方を紹介するブログです。<br>このログ ファイル自体は以前の OS から存在していましたが、特に Windows 10 や Windows Server 2016 では Get-WindowsUpdateLog を実行しないと WindowsUpdate.log が参照出来なくなったので、検証の際やトラブル シューティングの際にリアルタイムにログを確認する場合には、こちらのログを利用することをお勧めしております。  </p><p>Title: ReportingEvents.log の見方<br>URL: <a href="https://jpmem.github.io/blog/wsus/2018-02-02_01/">https://jpmem.github.io/blog/wsus/2018-02-02_01/</a>  </p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;皆さま こんにちは。 Configuration Manager サポートチームです。&lt;br&gt;こちらは WSUS のトラブルシューティングに役立つリンク集です。&lt;br&gt;WSUS を利用中にお困りの際、ぜひお役立てください！&lt;/p&gt;
&lt;h3 id=&quot;更新プログラムのダウンロー</summary>
      
    
    
    
    
    <category term="WSUS" scheme="https://jpmem.github.io/blog/tags/WSUS/"/>
    
  </entry>
  
  <entry>
    <title>Configuration Manager クライアントの OS が意図せずにアップグレードしてしまった際の対処策について</title>
    <link href="https://jpmem.github.io/blog/mecm/20230220_01/"/>
    <id>https://jpmem.github.io/blog/mecm/20230220_01/</id>
    <published>2023-02-19T15:00:00.000Z</published>
    <updated>2023-07-06T08:40:51.286Z</updated>
    
    <content type="html"><![CDATA[<p>みなさま、こんにちは。Configuration Manager サポート チーム 山田 です。</p><p>本日は、Configuration Manager 環境にてクライアントの OS が意図せずアップグレードしてしまった際の要因と対処策についてご紹介いたします。</p><p>想定される要因として以下 2 つが挙げられますので、それぞれの場合について記載させていただきます。</p><ol><li>[Microsoft Update の更新プログラムをオンラインで確認する] ボタンをクリックした。</li><li>[イントラネットの Microsoft 更新サービスの場所を指定する] ポリシーが “未構成” となっている。</li></ol><h3 id="1-Microsoft-Update-の更新プログラムをオンラインで確認する-ボタンをクリックした。"><a href="#1-Microsoft-Update-の更新プログラムをオンラインで確認する-ボタンをクリックした。" class="headerlink" title="1. [Microsoft Update の更新プログラムをオンラインで確認する] ボタンをクリックした。"></a>1. [Microsoft Update の更新プログラムをオンラインで確認する] ボタンをクリックした。</h3><h4 id="要因"><a href="#要因" class="headerlink" title="要因"></a>要因</h4><p>ソフトウェア更新ポイントが構成されている Configuration Manager 環境のクライアントであれば、クライアント端末より [設定] - [Windows Update] と辿ると以下のボタンが表示されています。</p><p><img src="/blog/mecm/20230220_01/2023-02-20-11-08-38.png"></p><p>上記のボタンを押すと構成されている WSUS サーバーではなく、Microsoft Update に対して更新プログラムをチェックしに行くため、その時点でクライアントがインストールできる最新の機能更新プログラムや品質更新プログラムをダウンロード、インストールしてしまいます。<br>そのため、結果的に意図していない OS のアップグレードが行われます。  </p><h4 id="対処策"><a href="#対処策" class="headerlink" title="対処策"></a>対処策</h4><p>以下 3 つのうち、どれかのポリシーを “有効” とすると、ユーザー側で [Microsoft Update の更新プログラムをオンラインで確認する] ボタンがクリックできなくなります。  </p><ol><li>[コンピューターの構成] - [管理用テンプレート] - [Windows Update] - [Windows Update のすべての機能へのアクセスを削除する]<br>※ [更新プログラムのチェック] ボタンもクリックできなくなります。</li><li>[コンピューターの構成] - [管理用テンプレート] - [Windows Update] - [インターネット上の Windows Update に接続しない]  </li><li>[コンピューターの構成] - [管理用テンプレート] - [システム] - [インターネット通信の管理] - [インターネット通信の設定]- [Windows Update のすべての機能へのアクセスをオフにする]  </li></ol><p>上記のうち [インターネット上の Windows Update に接続しない] ポリシーはインターネットから更新プログラムを取得することを禁止しますが、Microsoft ストア アプリの更新もブロックされます。<br>そのため、インターネットから更新プログラムを取得することは禁止したいが、ストア アプリの更新は行いたい場合、[Windows Update のすべての機能へのアクセスをオフにする] ポリシーを有効にしてください。  </p><h3 id="2-イントラネットの-Microsoft-更新サービスの場所を指定する-ポリシーが-“未構成”-となっている。"><a href="#2-イントラネットの-Microsoft-更新サービスの場所を指定する-ポリシーが-“未構成”-となっている。" class="headerlink" title="2. [イントラネットの Microsoft 更新サービスの場所を指定する] ポリシーが “未構成” となっている。"></a>2. [イントラネットの Microsoft 更新サービスの場所を指定する] ポリシーが “未構成” となっている。</h3><h4 id="要因-1"><a href="#要因-1" class="headerlink" title="要因"></a>要因</h4><p>通常、Configuration Manager（ソフトウェア更新ポイントの機能を使用している場合）クライアントであれば、以下のポリシーが “有効” になっており、WSUS サーバーが入力されています。  </p><p>[コンピューターの構成] - [管理用テンプレート] - [Windows Update] - [イントラネットの Microsoft 更新サービスの場所を指定する]  </p><p><img src="/blog/mecm/20230220_01/2023-02-20-11-10-23.png"></p><p>しかし、何らかの要因により上記ポリシーがリセットされ、”未構成” となってしまっている場合は WSUS サーバーに更新プログラムをチェックしに行かず、Microsoft Update に対して更新プログラムをチェックしに行くため、意図していない OS のアップグレードが行われる可能性がございます。<br>今までは Configuration Manager で更新プログラムの管理ができており、特段何もしていないにも関わらず上記ポリシーが “未構成” になってしまった場合には個別の調査が必要でございますので、弊社サポートへのお問い合わせをご検討いただけますと幸いです。  </p><h4 id="対処策-1"><a href="#対処策-1" class="headerlink" title="対処策"></a>対処策</h4><p>一時的な対処としては以下のポリシーを “無効” とすることで、クライアント端末が自動で Windows Update が実行されることを無効にすることができます。  </p><p>[コンピューターの構成] - [管理用テンプレート] - [Windows Update] - [自動更新を構成する]  </p><p>[自動更新を構成する] ポリシーを “無効” にしても、手動で [更新プログラムのチェック] を行うことは可能なため、上述の [Windows Update のすべての機能へのアクセスを削除する] ポリシーと合わせて適用することで、自動 / 手動ともに Windows Update が実行されなくなりますので、ご検討ください。  </p><p>ただし、ソフトウェア更新プログラムを Configuration Manager で管理しているクライアントにおいて、 [イントラネットの Microsoft 更新サービスの場所を指定する] ポリシーが “未構成” であることは本来あるべき状態ではございません。<br>根本解決のためにはトラブルシューティングが必要のため、弊社サポートへのお問い合わせをご検討ください。  </p><h4 id="補足事項"><a href="#補足事項" class="headerlink" title="補足事項"></a>補足事項</h4><p>今回は Configuration Manager 環境のクライアントについて記載いたしましたが、WSUS 環境のクライアントでも以下 3 つのポリシーを “有効” とすることで、意図せずにインターネットから機能更新プログラムを取得し、OS のアップグレードが行われることを阻止できますので、貴社環境の運用に合わせて適用ください。  </p><ul><li>[Windows Update のすべての機能へのアクセスを削除する] : 有効</li><li>[インターネット上の Windows Update に接続しない] : 有効</li><li>[Windows Update のすべての機能へのアクセスをオフにする] : 有効</li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;みなさま、こんにちは。Configuration Manager サポート チーム 山田 です。&lt;/p&gt;
&lt;p&gt;本日は、Configuration Manager 環境にてクライアントの OS が意図せずアップグレードしてしまった際の要因と対処策についてご紹介いたします。&lt;</summary>
      
    
    
    
    
    <category term="MECM" scheme="https://jpmem.github.io/blog/tags/MECM/"/>
    
  </entry>
  
  <entry>
    <title>Configuration Manager における更新プログラムの適用状況の確認方法について</title>
    <link href="https://jpmem.github.io/blog/mecm/20230217_01/"/>
    <id>https://jpmem.github.io/blog/mecm/20230217_01/</id>
    <published>2023-02-16T15:00:00.000Z</published>
    <updated>2023-07-06T08:40:51.278Z</updated>
    
    <content type="html"><![CDATA[<p>みなさま、こんにちは。Configuration Manager サポート チームです。  </p><p>本日は Configuration Manager で更新プログラムを管理している環境において、更新プログラムの適用状況を確認する方法をご紹介いたします。<br>更新プログラムの適用状況を確認する方法は複数ありますが、それぞれ反映されるタイミングが異なりますので、用途に応じて使い分けていただければと思います。</p><h1 id="管理コンソールから確認する方法"><a href="#管理コンソールから確認する方法" class="headerlink" title="管理コンソールから確認する方法"></a>管理コンソールから確認する方法</h1><p>Configuration Manager の管理者が管理コンソールから、更新プログラムの適用状況を確認する方法です。<br>通常の運用では、更新プログラムの展開を行った後、まずこちらで確認することが多くなるかと思います。</p><h2 id="1-展開ステータスから確認"><a href="#1-展開ステータスから確認" class="headerlink" title="1. 展開ステータスから確認"></a>1. 展開ステータスから確認</h2><p>展開ステータスは、更新プログラムの展開を受信したクライアントの進行状況の概要を把握するために有用です。<br>展開単位で各ステータスの割合やそのステータスを報告したクライアントの一覧を確認できますので、現在の進行状況がおおよそどれくらいになっているかを把握するために使います。<br>但し、クライアントから報告された状態メッセージをもとに概要処理が行われた後の概要データを参照している画面となるため、実際のクライアントの適用状況が時間差で反映されることがあります。<br>そのため、最新の適用状態を確認する場合は、レポートを使用します。</p><p><img src="/blog/mecm/20230217_01/01.png" alt="image.png">  </p><h2 id="2-展開レポートを確認"><a href="#2-展開レポートを確認" class="headerlink" title="2. 展開レポートを確認"></a>2. 展開レポートを確認</h2><p>展開レポートはクライアントから報告された状態メッセージのデータを表示するため、状態メッセージが正しく報告されている状態であれば、クライアントの最新状況を正確に把握することができます。<br>そのため、展開ステータスで概要を把握した後、特定のクライアントの状態を把握するときに使用します。</p><p>まず、「状態 1 - 展開の強制実行状態」レポートを確認します。<br>このレポートでは検索条件に指定した展開において、最終状態毎に分類されてレコードが表示されます。そのため、対象の展開全体において、どの状態になっているクライアントが多いかを把握することができます。（展開ステータスで確認できる情報と同じものですが、概要処理実行前でも確認可能ですので、こちらの方がリアルタイムに把握できます。）</p><p><img src="/blog/mecm/20230217_01/02.png" alt="image.png">  </p><p>このレポートで展開名列のリンクをクリックすると、「状態 4 - 展開の特定の状態にあるコンピューター (セカンダリ)」レポートが開きます。<br>このレポートでは、その状態にあるコンピューターの一覧が表示されます。エラー ステータス ID や説明の列があるので、エラーが発生した場合において具体的なエラー内容を把握するために使用できます。</p><p><img src="/blog/mecm/20230217_01/03.png" alt="image.png">  </p><p>展開に複数の更新プログラムが含まれている場合、その展開の特定のクライアントの状態を知りたい場合は、「状態 3 - 展開とコンピューターの状態」レポートを開きます。<br>このレポートでは、検索条件に指定したコンピューターにおいて、対象の展開に含まれる更新プログラムの状態が一覧となって表示されるので、その展開に含まれる更新プログラムの適用状況を把握するために使用できます。</p><p><img src="/blog/mecm/20230217_01/04.png" alt="image.png">  </p><h2 id="3-Windows-Servicing-ダッシュボード-旧-Windows-10-ダッシュボード-を確認"><a href="#3-Windows-Servicing-ダッシュボード-旧-Windows-10-ダッシュボード-を確認" class="headerlink" title="3. Windows Servicing ダッシュボード (旧 Windows 10 ダッシュボード) を確認"></a>3. Windows Servicing ダッシュボード (旧 Windows 10 ダッシュボード) を確認</h2><p>Windows Servicing ダッシュボードでは、機能更新プログラムや品質更新プログラムのバージョンの内訳が円グラフとなって表示されます。Windows 10/11 の場合、品質更新プログラムを適用すると、特定のバージョンになりますので、品質更新プログラムの適用状況はダッシュボードで、そのバージョンになっているかどうかを確認することによっても把握できます。<br>円グラフ内で、確認したいバージョンの部分をクリックすると、そのバージョンになっているデバイスの一覧が表示されますので、適用状況を確認したいクライアントがその一覧に表示されるかどうかを確認するために使用できます。</p><p><img src="/blog/mecm/20230217_01/05.png" alt="image.png">  </p><h1 id="クライアントのログから確認する方法"><a href="#クライアントのログから確認する方法" class="headerlink" title="クライアントのログから確認する方法"></a>クライアントのログから確認する方法</h1><p>特定のクライアントで更新プログラムが配信されているかどうかを確認する場合の、確認方法です。<br>こちらは更新プログラムを配信したクライアント端末内に存在するログから確認する方法となります。</p><h2 id="1-ReportingEvents-log-による確認"><a href="#1-ReportingEvents-log-による確認" class="headerlink" title="1. ReportingEvents.log による確認"></a>1. ReportingEvents.log による確認</h2><p>最も簡易的な確認方法です。%windir%\SoftwareDistribution\ReportingEvents.log より、[AGENT_INSTALLING_SUCCEEDED] イベントが CcmExec により Success となっているか確認します。<br>このログが記録されている場合 Configuration Manager クライアントによって更新プログラムがインストールされたことになります。</p><p>例）<br>%windir%\SoftwareDistribution\ReportingEvents.log</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;08785487-DDB3-4BA7-A32D-97DA31E119DD&#125;    2023-02-10 19:52:59:896+0900          1            183 [AGENT_INSTALLING_SUCCEEDED]       101        &#123;9CB4EAAF-1485-435A-9198-2B452F1DC644&#125;             200        0              CcmExec             Success              Content Install              Installation Successful: Windows successfully installed the following update: 2022-12 Cumulative Update for .NET Framework 3.5, 4.8 and 4.8.1 for Windows 10 Version 21H2 for x64 (KB5021088)      KszDqsCb7UmIDeso.14.0.0.3.0.0</span><br></pre></td></tr></table></figure><p>★ 2023/2/10 に CcmExec による「2022-12 Cumulative Update for .NET Framework 3.5, 4.8 and 4.8.1 for Windows 10 Version 21H2 for x64 (KB5021088)」のインストールが成功したことを示すログです。</p><h2 id="2-UpdateDeployment-log-による確認"><a href="#2-UpdateDeployment-log-による確認" class="headerlink" title="2. UpdateDeployment.log による確認"></a>2. UpdateDeployment.log による確認</h2><p>Configuration Manager クライアントによって更新プログラムのダウンロードからインストールが行われた経緯を追跡するために有用な確認方法です。<br>まず、%windir%\CCM\Logs\UpdatesDeployment.log の以下のログより、更新プログラムの Update ID を確認します。</p><p>例)<br>%windir%\CCM\Logs\UpdatesDeployment.log</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">2-03-2023 18:17:12.599    UpdatesDeploymentAgent    4012 (0xfac)    Update (Site_04BBD5B3-EC61-46B0-82C1-83C6B832829D/SUM_9cb4eaaf-1485-435a-9198-2b452f1dc644) Name (2022-12 Cumulative Update for .NET Framework 3.5, 4.8 and 4.8.1 for Windows 10 Version 21H2 for x64 (KB5021088)) ArticleID (5021088) added to the targeted list of deployment (&#123;B92846E4-0C5A-43CD-AF30-25C2074BB30E&#125;)</span><br></pre></td></tr></table></figure><p>「2022-12 Cumulative Update for .NET Framework 3.5, 4.8 and 4.8.1 for Windows 10 Version 21H2 for x64 (KB5021088)」の UpdateID は、9cb4eaaf-1485-435a-9198-2b452f1dc644 であることがわかります。</p><p>後は確認した Update ID でログをフィルターして、「Progress: Status =」となっているログの記録を追跡します。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">02-03-2023 18:17:12.599    UpdatesDeploymentAgent    4012 (0xfac)    Update (Site_04BBD5B3-EC61-46B0-82C1-83C6B832829D/SUM_9cb4eaaf-1485-435a-9198-2b452f1dc644) Name (2022-12 Cumulative Update for .NET Framework 3.5, 4.8 and 4.8.1 for Windows 10 Version 21H2 for x64 (KB5021088)) ArticleID (5021088) added to the targeted list of deployment (&#123;B92846E4-0C5A-43CD-AF30-25C2074BB30E&#125;)</span><br><span class="line">02-03-2023 18:17:12.802    UpdatesDeploymentAgent    8044 (0x1f6c)    Update (Site_04BBD5B3-EC61-46B0-82C1-83C6B832829D/SUM_9cb4eaaf-1485-435a-9198-2b452f1dc644) Progress: Status = ciStateDownloading, PercentComplete = 0, Result = 0x0</span><br><span class="line">...</span><br><span class="line">02-03-2023 18:17:35.748    UpdatesDeploymentAgent    4012 (0xfac)    Update (Site_04BBD5B3-EC61-46B0-82C1-83C6B832829D/SUM_9cb4eaaf-1485-435a-9198-2b452f1dc644) Progress: Status = ciStateDownloading, PercentComplete = 100, Result = 0x0</span><br></pre></td></tr></table></figure><p>★このタイミングでダウンロードが完了しました。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">02-10-2023 18:21:09.965    UpdatesDeploymentAgent    4048 (0xfd0)    Update (Site_04BBD5B3-EC61-46B0-82C1-83C6B832829D/SUM_9cb4eaaf-1485-435a-9198-2b452f1dc644) Progress: Status = ciStateDownloading, PercentComplete = 0, Result = 0x0</span><br><span class="line">02-10-2023 18:21:10.630    UpdatesDeploymentAgent    7648 (0x1de0)    Update (Site_04BBD5B3-EC61-46B0-82C1-83C6B832829D/SUM_9cb4eaaf-1485-435a-9198-2b452f1dc644) Progress: Status = ciStateDetecting, PercentComplete = 0, DownloadSize = 0, Result = 0x0</span><br><span class="line">02-10-2023 18:21:10.661    UpdatesDeploymentAgent    5888 (0x1700)    Update (Site_04BBD5B3-EC61-46B0-82C1-83C6B832829D/SUM_9cb4eaaf-1485-435a-9198-2b452f1dc644) Progress: Status = ciStateDownloading, PercentComplete = 0, DownloadSize = 0, Result = 0x0</span><br><span class="line">02-10-2023 18:21:10.911    UpdatesDeploymentAgent    7996 (0x1f3c)    Update (Site_04BBD5B3-EC61-46B0-82C1-83C6B832829D/SUM_9cb4eaaf-1485-435a-9198-2b452f1dc644) Progress: Status = ciStateWaitInstall, PercentComplete = 0, DownloadSize = 0, Result = 0x0</span><br><span class="line">...</span><br><span class="line">02-10-2023 18:22:23.108    UpdatesDeploymentAgent    3540 (0xdd4)    Update (Site_04BBD5B3-EC61-46B0-82C1-83C6B832829D/SUM_9cb4eaaf-1485-435a-9198-2b452f1dc644) Progress: Status = ciStateInstalling, PercentComplete = 100, DownloadSize = 0, Result = 0x0</span><br><span class="line">02-10-2023 18:22:23.186    UpdatesDeploymentAgent    7996 (0x1f3c)    Update (Site_04BBD5B3-EC61-46B0-82C1-83C6B832829D/SUM_9cb4eaaf-1485-435a-9198-2b452f1dc644) Progress: Status = ciStatePendingSoftReboot, PercentComplete = 0, DownloadSize = 0, Result = 0x0</span><br></pre></td></tr></table></figure><p>★このタイミングでインストールが完了し、再起動待ちとなりました。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">02-10-2023 19:55:29.081    UpdatesDeploymentAgent    5056 (0x13c0)    Update (Site_04BBD5B3-EC61-46B0-82C1-83C6B832829D/SUM_9cb4eaaf-1485-435a-9198-2b452f1dc644) Progress: Status = ciStateInstallComplete, PercentComplete = 0, DownloadSize = 0, Result = 0x0</span><br></pre></td></tr></table></figure><p>★このタイミングでインストールが成功しました。</p><p>なお、どこの配布ポイントからダウンロードしたかについては、UpdatesDeployment.log には記録されません。<br>ダウンロード元となる配布ポイントを確認する場合は、UpdatesDeployment.log よりダウンロードが開始された時間を把握した後、DataTrasnferServices.log より確認します。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">02-03-2023 18:17:13.544    DataTransferService    4012 (0xfac)    DataTransferService: DTSJob(&#123;5FA19A95-19E4-4EA4-8B5F-03251C093633&#125;) - created to download from &#x27;http://ADA-PS1SITE.adatum.com:80/SMS_DP_SMSPKG$/f65c14ba-94ac-4d7f-847c-ecaf000d1bed&#x27; to &#x27;C:\Windows\ccmcache\1p&#x27;.</span><br><span class="line">02-03-2023 18:17:13.544    DataTransferService    8044 (0x1f6c)    DTSJob(&#123;5FA19A95-19E4-4EA4-8B5F-03251C093633&#125;): state changing from &#x27;New&#x27; to state &#x27;DownloadingManifest&#x27;.</span><br><span class="line">02-03-2023 18:17:13.794    DataTransferService    6444 (0x192c)    Raising event:</span><br><span class="line"> </span><br><span class="line">instance of CCM_CcmHttp_Status</span><br><span class="line">&#123;</span><br><span class="line">              ClientID = &quot;GUID:DB715499-3414-4055-B873-278BAE1B73C4&quot;;</span><br><span class="line">              DateTime = &quot;20230203091713.794000+000&quot;;</span><br><span class="line">              HostName = &quot;ADA-PS1SITE.adatum.com&quot;;</span><br><span class="line">              HRESULT = &quot;0x00000000&quot;;</span><br><span class="line">              ProcessID = 6776;</span><br><span class="line">              StatusCode = 0;</span><br><span class="line">              ThreadID = 6444;</span><br><span class="line">&#125;;</span><br><span class="line">02-03-2023 18:17:13.794    DataTransferService    6444 (0x192c)    UpdateURLWithTransportSettings(): OLD URL - http://ada-ps1site.adatum.com/SMS_DP_SMSPKG$/sccm?/f65c14ba-94ac-4d7f-847c-ecaf000d1bed/</span><br><span class="line">02-03-2023 18:17:13.794    DataTransferService    6444 (0x192c)    UpdateURLWithTransportSettings(): NEW URL - http://ada-ps1site.adatum.com:80/SMS_DP_SMSPKG$/sccm?/f65c14ba-94ac-4d7f-847c-ecaf000d1bed/</span><br><span class="line">02-03-2023 18:17:13.794    DataTransferService    6444 (0x192c)    UpdateURLWithTransportSettings(): OLD URL - http://ada-ps1site.adatum.com/SMS_DP_SMSPKG$/f65c14ba-94ac-4d7f-847c-ecaf000d1bed/sccm?/Windows10.0-KB5020872-x64-NDP48.cab</span><br><span class="line">02-03-2023 18:17:13.794    DataTransferService    6444 (0x192c)    UpdateURLWithTransportSettings(): NEW URL - http://ada-ps1site.adatum.com:80/SMS_DP_SMSPKG$/f65c14ba-94ac-4d7f-847c-ecaf000d1bed/sccm?/Windows10.0-KB5020872-x64-NDP48.cab</span><br><span class="line">02-03-2023 18:17:13.794    DataTransferService    6444 (0x192c)    DTSJob(&#123;5FA19A95-19E4-4EA4-8B5F-03251C093633&#125;): state changing from &#x27;DownloadingManifest&#x27; to state &#x27;RetrievedManifest&#x27;.</span><br><span class="line">02-03-2023 18:17:13.810    DataTransferService    4012 (0xfac)    DTSJob(&#123;5FA19A95-19E4-4EA4-8B5F-03251C093633&#125;): state changing from &#x27;RetrievedManifest&#x27; to state &#x27;PendingDownload&#x27;.</span><br><span class="line">02-03-2023 18:17:13.810    DataTransferService    2536 (0x9e8)    DTSFlag is 0x0040050e</span><br><span class="line">02-03-2023 18:17:13.810    DataTransferService    2536 (0x9e8)    ContentInfo root location - C:\Windows\ccmcache\1p.BCWork\ContentInfo</span><br><span class="line">02-03-2023 18:17:13.810    DataTransferService    2536 (0x9e8)    Exclude file list:</span><br><span class="line">02-03-2023 18:17:13.810    DataTransferService    2536 (0x9e8)    Using branch cache option</span><br><span class="line">02-03-2023 18:17:13.826    DataTransferService    2536 (0x9e8)    DTSJob(&#123;5FA19A95-19E4-4EA4-8B5F-03251C093633&#125;): state changing from &#x27;PendingDownload&#x27; to state &#x27;DownloadingData&#x27;.</span><br><span class="line">02-03-2023 18:17:35.983    DataTransferService    4764 (0x129c)    DTSJob(&#123;5FA19A95-19E4-4EA4-8B5F-03251C093633&#125;): state changing from &#x27;DownloadingData&#x27; to state &#x27;RetrievedData&#x27;.</span><br><span class="line">02-03-2023 18:17:35.983    DataTransferService    4764 (0x129c)    DTSJob(&#123;5FA19A95-19E4-4EA4-8B5F-03251C093633&#125;):CDTSJob::JobTransferred - Successfully completed download.</span><br><span class="line">02-03-2023 18:17:36.061    DataTransferService    2536 (0x9e8)    DTSJob(&#123;5FA19A95-19E4-4EA4-8B5F-03251C093633&#125;): state changing from &#x27;RetrievedData&#x27; to state &#x27;NotifiedComplete&#x27;.</span><br><span class="line">02-03-2023 18:17:36.061    DataTransferService    2536 (0x9e8)    DTSJob(&#123;5FA19A95-19E4-4EA4-8B5F-03251C093633&#125;): Job has completed: Status : SUCCESS, Start time : 02/03/2023 18:17:13, Completion time : 02/03/2023 18:17:35, Elapsed time : 22 seconds</span><br></pre></td></tr></table></figure><p>★ ada-ps1site.adatum.com がダウンロード元であることがわかります。ダウンロードの経緯については DTSJob の ID でログをフィルターすることで追跡可能です。このログの場合は {5FA19A95-19E4-4EA4-8B5F-03251C093633} でフィルターすることになります。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;みなさま、こんにちは。Configuration Manager サポート チームです。  &lt;/p&gt;
&lt;p&gt;本日は Configuration Manager で更新プログラムを管理している環境において、更新プログラムの適用状況を確認する方法をご紹介いたします。&lt;br&gt;更新</summary>
      
    
    
    
    
    <category term="MECM" scheme="https://jpmem.github.io/blog/tags/MECM/"/>
    
  </entry>
  
</feed>
